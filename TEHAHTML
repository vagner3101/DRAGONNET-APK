<meta name='viewport' content='width=device-width, initial-scale=1.0'><style>@font-face {
    font-family: 'Palanquin Dark';
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url(pictures/atlantus.woff2) format('woff2');
    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
  }
  
  body
{
  overflow: hidden;
  position: fixed;
  font-family: 'Palanquin Dark', sans-serif;
  background: radial-gradient(#06060a, #171627);
  color: white;
  margin: 0px;
  left: 0px;
  top: 0px;
  height: 100%;
  width: 100%;
}

.moonbottom
{
  position: fixed;
  bottom: -5px;
  width: 150%;
  height: 138px;
  left: -25%;
  background: #cccccc;
  border-top-left-radius: 70%;
  border-top-right-radius: 70%;
}

.notification
{
  background: linear-gradient(
    45deg
    , #3f51b5, #0d4181);
        transform: translate(0%, -50%);
        position: fixed;
        right: 5px;
        top: 12%;
        height: 50px;
        width: max-content;
        color: white;
        text-align: left;
        padding-left: 19px;
        padding-right: 15px;
        z-index: 7;
        font-size: 15px;
        border-radius: 11px;
}

#logsview
{
  position: absolute;
  top: 46px;
  left: 0px;
  height: 69%;
  display: none;
  font-size: 14px;
  font-family: sans-serif;
  width: 100%;
  text-align: left;
  color: #ccc;
  overflow: scroll;
  padding-left: 20px;
}

.atlimg.animated {
    -webkit-animation: filter-animation 5s infinite;
    animation: filter-animation 5s infinite;
}
@-webkit-keyframes filter-animation {
    0% {
      -webkit-filter: hue-rotate(0deg);
    }
    
    40% {
      -webkit-filter: hue-rotate(100deg);
    }
    
      76% {
        -webkit-filter: hue-rotate(
    241deg);
    }
    100% {
      -webkit-filter: hue-rotate(
  343deg);
  }
  }
  
  @keyframes filter-animation {
    0% {
      filter: hue-rotate(0deg);
    }
    
    50% {
      filter: hue-rotate(100deg);
    }
    86% {
      filter: hue-rotate(
  241deg);
  }
  100% {
    filter: hue-rotate(
  343deg);
  }
    
  }

  .demotxt
  {
    position: fixed; 
    -webkit-transform: translate(-50%, -50%); 
    transform: translate(-50%, -50%);
     left: 50%; top: 50%;
      font-size: 7vw; width: 85%; 
      text-shadow: 0px 0px 5px black;
  }
  @keyframes demo {
    0% {
    box-shadow: 0px 0px 0px 2px #ff004c;;
    }
    25% {
      box-shadow: 0px 0px 0px 2px #8a2b47;;
    }
    75% {
      box-shadow: 0px 0px 0px 2px #4b242f;;
    }
    100% {
      box-shadow: 0px 0px 0px 2px #972b4c;;
    }
}

  @keyframes shake {
    0% {
      transform: translate(-50%, -50%) rotate(
    0deg);
      filter: drop-shadow(2px 4px 16px red);
    }
    25% {
      transform: translate(-50%, -50%) rotate(
    -1deg);
      filter: drop-shadow(2px 4px 6px rgb(197, 12, 43));
    }
    50% {
      transform: translate(-50%, -50%) rotate(
    1deg);
      filter: drop-shadow(2px 4px 6px darkred);
    }
    75% {
      transform: translate(-50%, -50%) rotate(
    -1deg);
    }
    100% {
      transform: translate(-50%, -50%) rotate(
    -1deg);
    }
}

.hshakex {
  animation: shakex 0.8s cubic-bezier(0.5, 0, 0.5, 1) infinite;
}

.hshake {
  animation: shake 0.8s cubic-bezier(0.5, 0, 0.5, 1) infinite;
}

.hshakez {
  animation: shakez 0.8s cubic-bezier(0.5, 0, 0.5, 1) infinite;
}



@keyframes shakez {
  0% {
    filter: drop-shadow(0px 0px 14px rgb(167, 139, 164));
  }
  25% {
    filter: drop-shadow(0px 0px 10px rgb(167, 144, 168));
  }
  50% {
    filter: drop-shadow(0px 0px 4px rgb(98, 93, 99));
  }
  75% {
  }
  100% {
  }
}

  @keyframes shakex {
    0% {
      filter: drop-shadow(2px 4px 16px rgb(10, 24, 44));
    }
    25% {
      filter: drop-shadow(2px 4px 6px rgb(2, 26, 49));
    }
    50% {
      filter: drop-shadow(2px 4px 6px rgb(0, 25, 139));
    }
    75% {
    }
    100% {
      filter: drop-shadow(2px 4px 6px rgb(2, 26, 49));
    }
}

#connecting
{   
  display:none;
  margin-left: 7px;
  color: #c7c7c7;
}
#connected
{
	display:none;
  color: #1dc471;
}
.lds-ring {
    display: inline-block;
       position: absolute;
       display:none;
       top: -13px;
       left: -13px;
   }
   .lds-ring div {
       box-sizing: border-box;
       display: block;
       position: absolute;
       width: 160px;
       height: 161px;
       margin: 8px;
       border: 4px solid #1f312f;
       border-radius: 50%;
       animation: lds-ring 0.8s cubic-bezier(0.5, 0, 0.5, 1) infinite;
       border-color: #3ab757 #41b73a #69b73a #80b73a;
   }
   .lds-ring div:nth-child(1) {
     animation-delay: -0.45s;
   }
   .lds-ring div:nth-child(2) {
     animation-delay: -0.3s;
   }
   .lds-ring div:nth-child(3) {
     animation-delay: -0.15s;
   }
   @keyframes lds-ring {
     0% {
       transform: rotate(0deg);
     }
     100% {
       transform: rotate(360deg);
     }
   }

   .lds-dual-ringz:after {
    content: " ";
    display: block;
    width: 108px;
    height: 108px;
    margin: 0px;
    border-radius: 50%;
    margin-left: -21px;
    margin-top: -12px;
    border: 2px solid #fff;
    border-color: #172b4c00 #0e1e3f00 #255caa #2549c8;
    animation: lds-dual-ring 1.2s linear infinite;
}

.lds-dual-ringz {
  display: inline-block;
     width: 80px;
     height: 80px;
     position: absolute;
     margin-left: -35px;
     margin-top: 1px;
 }

.lds-dual-ring {
    display: inline-block;
       width: 80px;
       height: 80px;
       position: absolute;
       margin-left: -35px;
       margin-top: 1px;
}

.lds-dual-ring:after {
    content: " ";
    display: block;
    width: 12px;
    height: 12px;
    margin: 8px;
    border-radius: 50%;
    border: 2px solid #fff;
    border-color: #508ef8 #303030 #1e1e1e #3c3c3c;
    animation: lds-dual-ring 1.2s linear infinite;
   }
   @keyframes lds-dual-ring {
     0% {
       transform: rotate(0deg);
     }
     100% {
       transform: rotate(360deg);
     }
}

.lds-dual-ring {
 display: inline-block;
    width: 80px;
    height: 80px;
    position: absolute;
    margin-left: -35px;
    margin-top: 1px;
}

.lds-dual-ring:after {
  content: " ";
  display: block;
  width: 13px;
  height: 13px;
  margin: 6px;
  border-radius: 50%;
  border: 2px solid #fff;
  border-color: #fff #fff5f536 #fff white;
  animation: lds-dual-ring 1.2s linear infinite;
}
.atlantusblock {
	position: relative;
	width: 500px;
	height: 250px;
	background: linear-gradient(0deg, #000, #272727);
}

.atlantusblock:before, .atlantusblock:after {
  content: '';
  position: absolute;
  left: -2px;
  top: -2px;
  background: linear-gradient(45deg, #fb0094, #0000ff, #00ff00,#ffff00, #ff0000, #fb0094, #0000ff, #00ff00,#ffff00, #ff0000);
  background-size: 400%;
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  z-index: -1;
  border-radius: 13px;
  opacity: 0.1;
  animation: steam 28s linear infinite;
}

@keyframes steam {
	0% {
		background-position: 0 0;
	}
	50% {
		background-position: 400% 0;
	}
	100% {
		background-position: 0 0;
	}
}

.atlantusblock:after {
  filter: blur(15px);
  -webkit-backface-visibility: hidden;
  -webkit-perspective: 1000;
  -webkit-transform: translate3d(0,0,0);
  -webkit-transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000;
  transform: translate3d(0,0,0);
  transform: translateZ(0);
}
@keyframes lds-dual-ring {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.flagserver
{
  height: 32px;
  position: absolute;
  left: 11px;
  top: 10px;
}

.substatus
{
    display: inline-block;
    font-size: 16px;
    position: relative;
    left: 7px;
    top: 0px;
}

.statusserver
{
  position: absolute;
  width: 100%;
  top: 113px;
  font-size: 16px;
  color: #9e9e9e;
  display: inline-block;
  left: 0px;
}

.arrowudp
{
  position: absolute;
    right: 13px;
    height: 18px;
    top: 18px;
    filter: invert(1);
}

.arrowserver
{
	position: absolute;
    right: 13px;
    height: 18px;
    top: 18px;
    filter: invert(1);
}

.descserver
{
  width: 59%;
  text-align: left;
  height: 22px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  position: absolute;
  top: 23px;
  font-size: 12px;
  left: 57px;
  color: #cccc;
}

.focuinauth
{    position: fixed;
  background: #00000017;
  height: 200%;
  width: 100%;
  top: -176px;
  z-index: 1;
  left: 0px;
  backdrop-filter: blur(0.5px);
  display:none;
}

.focuinserver
{
  height: 200%;
  width: 100%;
  position: fixed;
  background: #000000a3;
  display:none;
  left: 0px;
  top: -248px;
  z-index: 4;
}

.nameserver
{
  position: absolute;
  top: 3px;
  font-size: 16px;
  width: 64%;
  text-align: left;
  left: 57px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.selectedserver
{
  background: #04030491;
  width: 91%;
  height: 35px;
  border-radius: 4px;
  z-index: 5;
  padding: 9px;
  border: 1px solid #0d0d26;
  position: relative;
  display: inline-block;
  top: -54px;
  box-shadow: 4px 5px 8px 0px #000000;
  left: 0px;
}



#logexpand
{
  position: absolute;
  right: 0px;
  height: 100%;
  bottom: 0px;
  display: none;
  width: 298px;
  padding-left: 11px;
  background: #0a060ce0;
  z-index: 6;
  border-bottom-left-radius: 20px;
  border-top-left-radius: 20px;
}

#menuexpand
{
  position: absolute;
  left: 0px;
  height: 100%;
  bottom: 0px;
  display: none;
  width: 284px;
  padding-left: 11px;
  background: #09080cfc;
  z-index: 6;
}

.logbubble
{
  
  background: #15154c;
  font-size: 10px;
  border-radius: 60px;
  z-index: 3;
  position: absolute;
  width: 18px;
  top: 68px;
  left: 23px;
}

.connectbt
{
  width: 91%;
  height: 32px;
  padding: 10px;
  background: #060609e3;
  border: 1px solid #0d0d26;
  font-size: 21px;
  border-radius: 10px;
  box-shadow: 1px 1px 5px 0px #000000;
  position: relative;
  top: 21px;
  display: inline-table;
  left: 1px;
}



.inputmax
{
  padding: 11px;
  width: 48%;
  font-size: 19px;
  background: #0d0a1dc7;
  border: 0;
  color: #acacac;
  position: relative;
  top: 23px;
  border-radius: 8px;
  border-radius: 10px;
}


#nrlixuser
{
  width: 92%;
  height: 336px;
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  left: 50%;
  top: 50%;
  z-index: 1;
  position: fixed;
  border-radius: 10px;
}

#logsbar
{
  
  position: absolute;
  bottom: -1px;
  left: -2px;  
    height: 77px;
  font-size: 11px;
  transition: width 2s, height 0.8s;
  width: 100%;
  text-align: center;    z-index: 5;
  background: #0000004d;
  color: #ccc;
  border: 2px solid #160f0fd1;
  overflow: visible;
  border-radius: 6px;
}

.presshere
{
  position: absolute;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  top: 24%;
  left: 49%;
  font-size: 16px;
  width: 330px;
  text-align: center;
  color: #cdcdcd;
}



.freeimg
{
	height: 40px;
    width: 40px;
    background: #ffffff4d url(pictures/crown.png);
    background-repeat: no-repeat;
    background-position: 5px;
    border-radius: 60px;
    position: absolute;
    top: 9px;
    left: 6px;
}

.freetxtsmall
{
	    position: absolute;
    left: 58px;
    top: 26px;
    color: #ccc;
    font-size: 12px;
}
.freetxt
{
	position: absolute;
    left: 58px;
    top: 4px;
    font-size: 17px;
}

.header
{
	position: fixed;
    top: 57px;
	 left: 0px; 
	 width: 100%;
	 z-index:3;
	 text-align: center;
}

.startfree
{
    width: 300px;
    height: 60px;
    background: #4b0e79;
    position: absolute;
    left: 50%;
    bottom: 27px;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    border-radius: 10px;
}

.centerbody
{
  background: url(https://i.imgur.com/04sim3V.jpeg);
  position: absolute;
  opacity: 0.03;
  height: 100px;
  width: 100%;
  z-index: 1;
  left: 50%;
  background-size: 100% 100%;
  background-position-x: 0px;
  top: 0%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

.containerzz
{
  position: relative;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  transform: translate(-50%, -50%);
  left: 50%;
  top: 50%;
}
.containerzz .ringplus
{
    position: relative;
    width: 150px;
    height: 150px;
    margin: -30px;
    border-radius: 50%;
    border: 4px solid transparent;
    border-top: 4px solid #24ecff;
    animation: animate 4s linear infinite;
}
@keyframes animate
{
    0%
    {
        transform: rotate(0deg);
    }
    100%
    {
        transform: rotate(360deg);
    }
}
.containerzz .ringplus::before
{
    content: '';
    position: absolute;
    top: 12px;
    right: 12px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background: #24ecff;
    box-shadow: 0 0 0 5px #24ecff33,
    0 0 0 10px #24ecff22,
    0 0 0 20px #24ecff11,
    0 0 20px #24ecff,
    0 0 50px #24ecff;
}
.containerzz .ringplus:nth-child(2)
{
    animation: animate2 4s linear infinite;
    animation-delay: -1s;
    border-top: 4px solid transparent;
    border-left: 4px solid #93ff2d;
}
.containerzz .ringplus:nth-child(2)::before
{
    content: '';
    position: absolute;
    top: initial;
    bottom: 12px;
    left: 12px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background: #93ff2d;
    box-shadow: 0 0 0 5px #93ff2d33,
    0 0 0 10px #93ff2d22,
    0 0 0 20px #93ff2d11,
    0 0 20px #93ff2d,
    0 0 50px #93ff2d;
}
@keyframes animate2
{
    0%
    {
        transform: rotate(360deg);
    }
    100%
    {
        transform: rotate(0deg);
    }
}
.containerzz .ringplus:nth-child(3)
{
    animation: animate2 4s linear infinite;
    animation-delay: -3s;
    position: absolute;
    top: -66.66px;
    border-top: 4px solid transparent;
    border-left: 4px solid #e41cf8;
}
.containerzz .ringplus:nth-child(3)::before
{
    content: '';
    position: absolute;
    top: initial;
    bottom: 12px;
    left: 12px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background: #e41cf8;
    box-shadow: 0 0 0 5px #e41cf833,
    0 0 0 10px #e41cf822,
    0 0 0 20px #e41cf811,
    0 0 20px #e41cf8,
    0 0 50px #e41cf8;
}
.containerzz p
{
  position: absolute;
  color: #9d9d9d;
  font-size: 1.5em;
  bottom: -129px;
  text-shadow: 0px 0px 10px #ffffff24;
}
#splashscreen
{
  background: #0c0c11;
  position: fixed;
  height: 100%;
  width: 100%;
  z-index: 500;
}

#application
{
    display: none;
}
.menuiconx
{
	    position: absolute;
    right: 19px;
    filter: invert(1);
    top: 44px;
    height: 24px;
}

#appname
{
  font-size: 0px;
  color: #ff3434;
}

.pingserver
{
	 position: absolute;
    right: 14px;
    font-size: 13px;
    color: #ccc;
}

.premiumserver
{
	display:none;
}

.bronzeserver
{
	display: none;
}

.freeserver
{
}

.goldserver
{
	display: none;
}

.recommendserver
{
	display: none;
}

.greenping
{
	  background: #49ff50;
    width: 5px;
    height: 13px;
    position: absolute;
    right: -8px;
    border-radius: 55px;
    top: 7px;
}
.orangeping
{
	  background: #ff9100;
    width: 5px;
    height: 13px;
    position: absolute;
    right: -8px;
    border-radius: 55px;
    top: 7px;
}
.redping
{
	  background: #ff0000;
    width: 5px;
    height: 13px;
    position: absolute;
    right: -8px;
    border-radius: 55px;
    top: 7px;
}
.svbubble
{
  background: #0f171e;
  width: 88%;
  transform: translate(-50%, 0%);
  left: 45%;
  height: 31px;
  border-radius: 8px;
  top: 6px;
  margin-bottom: 7px;
  padding: 9px;
  position: relative;
}

.typeserver
{
    position: relative;
    width: 100%;
    text-align: left;
    padding-left: 20px;
    top: 20px;

}
.userprofile
{
  background: url(pictures/149071.png);
  position: relative;
  height: 80px;
  width: 220px;
  background-size: 80px 80px;
  border-bottom: 1px solid #2b3548;
  background-repeat: no-repeat;
  left: 15px;
  top: 100px;
  padding-bottom: 50px;
  background-position-x: 65px;
}

.descudp
{
  left: 14px;
  font-family: sans-serif;
  top: 27px;
}

#serverlist
{
  position: fixed;
  top: 56px;
  left: 2.5%;
  display: none;
  overflow-x: hidden;
  overflow-y: scroll;
  width: 95%;
  border-bottom: 4px solid #9e9e9e;
  border-top: 4px solid #9e9e9e;
  background: #000000e0;
  height: 56%;
  padding-bottom: 100px;
  z-index: 8;
  transform: translate(-50%, -50%);
  left: 50%;
  top: 50%;
  box-shadow: 8px 7px 9px black;
}
.lds-dual-ringzpzp {
  display: inline-block;
  width: 80px;
  height: 80px;
  position: absolute;
  margin-left: -35px;
  margin-top: 1px;
}
.lds-dual-ringzpzp:after {
  content: " ";
  display: block;
  width: 47px;
  height: 47px;
  margin: 8px;
  border-radius: 50%;
  border: 4px solid #000;
  border-color: #000 #000000 #673ab7 black;
  animation: lds-dual-ring 1.2s linear infinite;
}

.userid
{
	    position: absolute;
    bottom: 8px;
    width: 100%;
    text-align: center;
    font-size: 12px;
    color: #909090;
}

.atlcircle
{
  height: 19px;
    width: 19px;
    display: inline-block;
    background: #e91e63;
    border-radius: 60px;
    position: absolute;
    top: 9px;
    box-shadow: 0px 0px 13px 3px #060810;
    right: 15px;
}
.registerbubble
{
  position: absolute;
  right: 4px;
  top: 11px;
  font-size: 14px;
  font-weight: 100;
  color: #cdd8df;
  padding: 3px;
  background: #04030491;
  border-radius: 5px;
  width: 91px;
  box-shadow: 3px 3px 5px #0000009c;
}
.userexp
{
	    position: absolute;
        bottom: 23px;
    color: #8e8e8e;
    width: 100%;
    text-align: center;
    font-size: 12px;
}

.newbtx
{
  text-align: left;
  margin-left: -7px;
  border-left: 2px solid #1e394e;
  margin-top: 21px;
  padding: 2px;
}
.starttext
{
  font-size: 17px;
  position: relative;
  color: #dfdfee;
}
.menulist
{
	position: absolute;
    color: #adadaf;
    top: 275px;
    left: 52px;
}
.menuicon
{
  position: absolute;
  left: 3px;
  top: 11px;
  height: 23px;
  padding: 5px;
  filter: invert(1);
}

.menutxt
{
  position: relative;
  margin-bottom: 30px;
  margin-left: -38px;
}
.rightbt
{
  position: absolute;
  right: 10px;
  transform: rotate( 
0deg
);
  /* background: #00000052; */
  text-align: center;
  padding: 4px;
  width: 33px;
  height: 94px;
  top: -1px;
  border-radius: 60px;
}

.menuicond
{
	 position: absolute;
    height: 18px;
    left: -27px;
    top: 6px;
    filter: invert(1);
    opacity: 0.77;
}
.crowimg
{
  height: 20px;
  position: relative;
  left: 11px;
  top: 0px;
  display: inline-block;
}

.acceptbt
{
  position: relative;
  top: 14px;
  padding: 5px;
  background: #3f51b5;
  width: 150px;
  left: 82px;
  border-radius: 5px;
}

.activebt
{
    position: relative;
    top: 14px;
    padding: 5px;
    display: inline-block;
    background: #3f51b5;
    width: 78px;
    border-radius: 5px;
}
.textboost
{
    font-size: 14px;
        color: #e6e6e6;
}
.titleboost
{
    margin-top: -59px;
        font-size: 24px;
        color: #ffa382;
        filter: grayscale(1);
}

.wave {
  animation-name: wave-animation;  /* Refers to the name of your @keyframes element below */
  animation-duration: 2.5s;        /* Change to speed up or slow down */
  animation-iteration-count: infinite;  /* Never stop waving :) */
  transform-origin: 70% 70%;       /* Pivot around the bottom-left palm */
  display: inline-block;
}

@keyframes wave-animation {
    0% { transform: rotate( 0.0deg) }
   10% { transform: rotate(14.0deg) }  /* The following five values can be played with to make the waving more or less extreme */
   20% { transform: rotate(-8.0deg) }
   30% { transform: rotate(14.0deg) }
   40% { transform: rotate(-4.0deg) }
   50% { transform: rotate(10.0deg) }
   60% { transform: rotate( 0.0deg) }  /* Reset for the last half to pause */
  100% { transform: rotate( 0.0deg) }
}


#authshow
{
  transform: translate(-50%, -50%);
  position: fixed;
  left: 49%;
  top: 49%;
  width: 90%;
  height: 185px;
  padding: 9px;
  text-align: center;
}
.bodyboost
{
  position: absolute;
  left: 50%;
  top: 48%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  height: 350px;
  width: 80%;
  border-radius: 5px;
  padding: 20px;
  text-align: center;
  max-width: 352px;
  border-bottom: 4px solid #9e9e9e;
  border-top: 4px solid #9e9e9e;
  background: #000000e0;
}
.atlantusoverlay
{   
   display: none;
  position: absolute;
  height: 100%;
  width: 100%;
  background: rgb(4 5 10 / 78%);
  z-index: 5;
}
#boostmode
{
    display:none;
    position: absolute; height: 100%;
     width: 100%; 
     backdrop-filter: blur(4px);
     background: rgb(0 0 0 / 61%); z-index: 5;
}
#connectedpl
{
    display:none;
    position: absolute; height: 100%;
     width: 100%; 
     backdrop-filter: blur(4px);
     background: rgb(0 0 0 / 61%); z-index: 5;
}
#storagemode
{
    display:none;
    position: absolute; height: 100%;
     width: 100%; background: rgba(0, 0, 0, 0.76); z-index: 5;
}
.protxt
{
  color: #dadada;
    font-weight: 100;
    display: inline-block;
    font-size: 13px;
    width: 100%;
    text-align: center;
    position: relative;
    left: 0px;
}


.blobs {
  filter: url(#goo);
  width: 300px;
  height: 300px;
  position: relative;
  overflow: hidden;
  border-radius: 70px;
  transform-style: preserve-3d;
}
.blobs .blob-center {
  transform-style: preserve-3d;
  position: absolute;
  background: #FFF200;
  top: 50%;
  left: 50%;
  width: 30px;
  height: 30px;
  transform-origin: left top;
  transform: scale(0.9) translate(-50%, -50%);
  -webkit-animation: blob-grow linear 3.4s infinite;
          animation: blob-grow linear 3.4s infinite;
  border-radius: 50%;
  box-shadow: 0 -10px 40px -5px #FFF200;
}

.blob {
  position: absolute;
  background: #FFF200;
  top: 50%;
  left: 50%;
  width: 30px;
  height: 30px;
  border-radius: 50%;
  -webkit-animation: blobs ease-out 3.4s infinite;
          animation: blobs ease-out 3.4s infinite;
  transform: scale(0.9) translate(-50%, -50%);
  transform-origin: center top;
  opacity: 0;
}
.blob:nth-child(1) {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s;
}
.blob:nth-child(2) {
  -webkit-animation-delay: 0.4s;
          animation-delay: 0.4s;
}
.blob:nth-child(3) {
  -webkit-animation-delay: 0.6s;
          animation-delay: 0.6s;
}
.blob:nth-child(4) {
  -webkit-animation-delay: 0.8s;
          animation-delay: 0.8s;
}
.blob:nth-child(5) {
  -webkit-animation-delay: 1s;
          animation-delay: 1s;
}

@-webkit-keyframes blobs {
  0% {
    opacity: 0;
    transform: scale(0) translate(calc(-330px - 50%), -50%);
  }
  1% {
    opacity: 1;
  }
  35%, 65% {
    opacity: 1;
    transform: scale(0.9) translate(-50%, -50%);
  }
  99% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: scale(0) translate(calc(330px - 50%), -50%);
  }
}

@keyframes blobs {
  0% {
    opacity: 0;
    transform: scale(0) translate(calc(-330px - 50%), -50%);
  }
  1% {
    opacity: 1;
  }
  35%, 65% {
    opacity: 1;
    transform: scale(0.9) translate(-50%, -50%);
  }
  99% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: scale(0) translate(calc(330px - 50%), -50%);
  }
}
@-webkit-keyframes blob-grow {
  0%, 39% {
    transform: scale(0) translate(-50%, -50%);
  }
  40%, 42% {
    transform: scale(1, 0.9) translate(-50%, -50%);
  }
  43%, 44% {
    transform: scale(1.2, 1.1) translate(-50%, -50%);
  }
  45%, 46% {
    transform: scale(1.3, 1.2) translate(-50%, -50%);
  }
  47%, 48% {
    transform: scale(1.4, 1.3) translate(-50%, -50%);
  }
  52% {
    transform: scale(1.5, 1.4) translate(-50%, -50%);
  }
  54% {
    transform: scale(1.7, 1.6) translate(-50%, -50%);
  }
  58% {
    transform: scale(1.8, 1.7) translate(-50%, -50%);
  }
  68%, 70% {
    transform: scale(1.7, 1.5) translate(-50%, -50%);
  }
  78% {
    transform: scale(1.6, 1.4) translate(-50%, -50%);
  }
  80%, 81% {
    transform: scale(1.5, 1.4) translate(-50%, -50%);
  }
  82%, 83% {
    transform: scale(1.4, 1.3) translate(-50%, -50%);
  }
  84%, 85% {
    transform: scale(1.3, 1.2) translate(-50%, -50%);
  }
  86%, 87% {
    transform: scale(1.2, 1.1) translate(-50%, -50%);
  }
  90%, 91% {
    transform: scale(1, 0.9) translate(-50%, -50%);
  }
  92%, 100% {
    transform: scale(0) translate(-50%, -50%);
  }
}
@keyframes blob-grow {
  0%, 39% {
    transform: scale(0) translate(-50%, -50%);
  }
  40%, 42% {
    transform: scale(1, 0.9) translate(-50%, -50%);
  }
  43%, 44% {
    transform: scale(1.2, 1.1) translate(-50%, -50%);
  }
  45%, 46% {
    transform: scale(1.3, 1.2) translate(-50%, -50%);
  }
  47%, 48% {
    transform: scale(1.4, 1.3) translate(-50%, -50%);
  }
  52% {
    transform: scale(1.5, 1.4) translate(-50%, -50%);
  }
  54% {
    transform: scale(1.7, 1.6) translate(-50%, -50%);
  }
  58% {
    transform: scale(1.8, 1.7) translate(-50%, -50%);
  }
  68%, 70% {
    transform: scale(1.7, 1.5) translate(-50%, -50%);
  }
  78% {
    transform: scale(1.6, 1.4) translate(-50%, -50%);
  }
  80%, 81% {
    transform: scale(1.5, 1.4) translate(-50%, -50%);
  }
  82%, 83% {
    transform: scale(1.4, 1.3) translate(-50%, -50%);
  }
  84%, 85% {
    transform: scale(1.3, 1.2) translate(-50%, -50%);
  }
  86%, 87% {
    transform: scale(1.2, 1.1) translate(-50%, -50%);
  }
  90%, 91% {
    transform: scale(1, 0.9) translate(-50%, -50%);
  }
  92%, 100% {
    transform: scale(0) translate(-50%, -50%);
  }
}</style><script>
////velocidade de transição, quanto maior mais demora e pode lagar mais////
var transitionspeed = 50;

///aqui é onde abre e fecha o menu
function menuaction()
{
		atlantuseffectleft("#menuexpand");
		$("#logexpand").fadeOut(0);
}
function logaction()
{
		atlantuseffectleft("#logexpand");
		$("#menuexpand").fadeOut(0);
}

function dev()
{
  atlantuseffectcenter("#devtest");
}
function termos()
{
  atlantuseffectcenter("#termos");
}

function boostmode()
{
	atlantuseffectcenter("#boostmode");
}

//Ativar boostmode
function acboostmode()
{
  //requestboost();
	atlantuseffectcenter("#boostmode");
}

function storagemode()
{
  atlantushide("#storagemode");
  requestwrite();
}

//aqui trabalha a mudança de servidor

function udpchange()
{
  atlantusdropudp();
}

function serverchange()
{
	atlantusdropserver();
}


///Finaliza a tela de login userssh
function authfinishu()
{
  /*
	atlantuslogclear();
	atlantusloginsetu(2);
	atlantuseffectcenter("#authuser");
	atlantushide("#authtype");
	atlantushide("#wronguser");
  subscribecache_load();
  */
  
	atlantushide("#wronguser");
         $('#nrlixusernew').addClass('hshake');
          setTimeout(function(){ $('#nrlixusernew').removeClass('hshake');}, 700); 
   $("#wrongaccess").fadeIn(10);
}

///abre a tela de seleção de login
function auth()
{
	atlantuseffectcenter("#authtype");
	//atlantuseffectleft("#menuexpand");
}


///aqui inicia a vpn
function startvpn()
{

}


///aqui para a vpn
function stopvpn()
{

}

///Abrir contato
function opencontact()
{
  contactview();
}

//aqui carrega a lista de servidores e insere
function loadservers()
{

}


///aqui busca o cache e insere na input
function loadcachetoken()
{

}

//Fechar menu ao clicar em algo
function menuclose()
{
	atlantuseffectleft("#menuexpand");
}

</script>


<script>

	//ATLANTUS SIDE
	//ATLANTUS SIDE
	//ATLANTUS SIDE
    var atlantus_cc;
    var host = "";
    var ip = "";
    var udporder = "";
    var port = "";
    var udpkey = "";
    var runid = "";
    var token = "";
    var udpport = "*Random";
    var logintype = 1; // 0 token, 1 userssh
    var hashu;
    var hashp;
    var contatourl = "";
    var type = "";
    var tokenlast = "";
    var usersshlast;
    var passsshlast;
    var udpfw;
    var udpaddress = "127.0.0.1:7300";
    var status = "";
    var lcint = 0;
    var ovpnative;
    var ovpnssl;
    var ovpntcp;
    var ovpntxt;
    var realip;
    var realping;
    var usercheck = false;
    var proxyip;
    var deviceid = "";
    var proxyport;
    var snihost;
    var istest = false;
    var lastprofilecat = 0;
    var finishauth = 0;
    var dnsone = "";
    var dnstwo = "";
    var lastsubscribe = "";
    var ryzennew = "";
    var ryzennewx = "";
    var animateperm = true;
    var laststatus = "Inativo";
    var hostapp = "";

	(function(){
    
	    var tId = setInterval(function() {
	        if (document.readyState == "complete") onComplete()
	    }, 11);
	    function onComplete(){
               clearInterval(tId);
              loaderstart();
              atlantus_key();
              setInterval( async function(){ core(); }, 150);
              setTimeout(function(){  loadcontent(); }, 100);
              setTimeout(function(){  initupdate(); }, 465);
	    };
	})()

  function atlantus_key(){
                var activity = null;
                rawFile = new XMLHttpRequest();
                rawFile.open("GET", "classes/Global.cs", false);
                rawFile.onreadystatechange = function ()
                {
                    if(rawFile.readyState === 4)
                    {
                        if(rawFile.status === 200 || rawFile.status == 0)
                        {
                          
                            var allText = rawFile.responseText;
                            var compiled = allText.trim();
                            activity = compiled;
                        }
                    }
                }
                rawFile.send(null);

                activity = activity.substring(0,35);
                rawFile = new XMLHttpRequest();
                rawFile.open("GET", "atlantus_key.cc", false);
                rawFile.onreadystatechange = function ()
                {
                    if(rawFile.readyState === 4)
                    {
                        if(rawFile.status === 200 || rawFile.status == 0)
                        {
                            var allText = rawFile.responseText;
                            var compiled = allText.trim();
                            //alert(compiled);
                            let encrypted = atob(compiled);
                            let password = activity + '1111111111111111aaaaaaaaaaaaaaaa9999999999999999410JsCompactSimplify00000chuncky000000008493SMFospaOverFLOW,Eospka,92390a,dj9290,ei12/wd12dowzkkfe';
                            let decrypted = CryptoJSAesJson.decrypt(encrypted, password);
                            compiled = decrypted;
                            atlantus_cc = compiled;
                            atlantus_cc = atob(atlantus_cc);
                            ////console.log(atlantus_cc);
	                          var splitNamed = atlantus_cc.split("--------");
                            var splitNamed2 = splitNamed[1].split("@@@@");
                            hostapp = splitNamed2[0];
                            hashu = splitNamed2[1];
                            hashp = splitNamed2[2];
                            hashutmp = splitNamed2[1];
                            hashptmp = splitNamed2[2];
                            contatourl = splitNamed2[3];
                            if(splitNamed2[4] == 0)
                            {
                              $(".hsharez").fadeOut(0);
                            }
                      }
                    }
                }
                rawFile.send(null);
      loadtheme();

   }	
   
   function exitsettings()
   {
     atlantushide("#settingsapp");
   }

  
   function setdialogpass()
  {
      sendcore("setdialogpass########1");
  }

   function nodialogpassview(data)
   {
     if(data == "true")
     {
      $("#wrongauthbubble").attr("style", "background: #4caf50;");
     }
     else
     {
      $("#wrongauthbubble").attr("style", "background: #e91e63;");
     }
   }

  
  function setvelocimetro()
  {
      sendcore("setvelocimetro########1");
  }

   function velocimetroview(data)
   {
     if(data == "true")
     {
      $("#velocimetrobubble").attr("style", "background: #4caf50;");
     }
     else
     {
      $("#velocimetrobubble").attr("style", "background: #e91e63;");
     }
   }

   function setdatacompression()
  {
      sendcore("setdatacompression########1");
  }

   function datacompressionview(data)
   {
     if(data == "true")
     {
      $("#compressbubble").attr("style", "background: #4caf50;");
     }
     else
     {
      $("#compressbubble").attr("style", "background: #e91e63;");
     }
   }

  function setkeepvpn()
  {
      sendcore("setkeepvpn########1");
  }

   function keepvpnview(data)
   {
     if(data == "true")
     {
      $("#keepvpnbubble").attr("style", "background: #4caf50;");
     }
     else
     {
      $("#keepvpnbubble").attr("style", "background: #e91e63;");
     }
   }

   function ipv6view(data)
   {
     if(data == "true")
     {
      $("#ipv6bubble").attr("style", "background: #4caf50;");
     }
     else
     {
      $("#ipv6bubble").attr("style", "background: #e91e63;");
     }
   }

   function settings()
   {
     atlantusvisible("#settingsapp");
     sendcore("settingsapp########1");
   }


   async function loaderstart()
   {
    //   $('#gettingglobal').append('<div id="splashscreen"><div class="blobs" style=" filter: hue-rotate(545deg); transform: translate(-50%, -50%); transform-style: preserve-3d; left: 50%; top: 50%; "> <div class="blob-center"></div> <div class="blob"></div> <div class="blob"></div> <div class="blob"></div> <div class="blob"></div> <div class="blob"></div> <div class="blob"></div> <div style=" position: absolute; left: 118px; bottom: 39px; color: cornsilk; ">Iniciando</div></div> </div>');
         
       /*
        setTimeout(function(){  $("#textload").text("Iniciando libs..."); }, 200);
        setTimeout(function(){  $("#textload").text("Verificando espaço..."); }, 400);
        setTimeout(function(){  $("#textload").text("Verificando dispositivo..."); }, 600);
        setTimeout(function(){  $("#textload").text("Verificando hardware..."); }, 700);
        setTimeout(function(){  $("#textload").text("Verificando background..."); }, 900);
        setTimeout(function(){  $("#textload").text("Verificando sistema..."); }, 1100);
        setTimeout(function(){  $("#textload").text("Checagem de violação..."); }, 1400);
        setTimeout(function(){  $("#textload").text("Otimizando..."); }, 1600);
        setTimeout(function(){  $("#textload").text("Iniciando recursos..."); }, 1900);
        setTimeout(function(){  $("#textload").text("Android wake..."); }, 2150);
        setTimeout(function(){  $("#textload").text("Tudo pronto, aguarde!"); }, 2300);
        */
        setTimeout(function(){ 
        $(".containerzz").animate({ 'zoom': 1.2 }, 500); }, 2100);
        setTimeout(function(){  $("#splashscreen").fadeOut(1000); }, 2500);
   }

   async function loadcontent()
   {								
    subscribecache_load();
    profilecache_load();
    logincache_load();
   }

  function passwordprotect()
  {
      var x = "User-agent header sent: " + navigator.userAgent;
      //console.log("himan" + x);
        $(".nrlixpass").prop("type", "password");
        $('.nrlixpass').click(function(e) {
          $(".nrlixpass").prop("type", "text");
          return false;
        });
        $('.nrlixpass').on('focusout', function () {
        $(".nrlixpass").prop("type", "password");
        });
        
        $('.logoapp').click(function(e) { 
          $('.logoapp').addClass('hshakez');
          setTimeout(function(){ $('.logoapp').removeClass('hshakez');}, 380); 
          initupdate();
          return false;
        });
        $('#appname').click(function(e) {
          return false;
        });
  }
  
 async function loadtheme()
   {
    encrypted = localStorage['theme_data'];
     try
    {
    if(encrypted == ""){}
      else{
         var activity = null;
                            rawFile = new XMLHttpRequest();
                            rawFile.open("GET", "classes/Global.cs", false);
                            rawFile.onreadystatechange = function ()
                            {
                                if(rawFile.readyState === 4)
                                {
                                    if(rawFile.status === 200 || rawFile.status == 0)
                                    {
                                      
                                        var allText = rawFile.responseText;
                                        var compiled = allText.trim();
                                        activity = compiled;
                                    }
                                }
                            }
                            rawFile.send(null);
                            activity = activity.substring(0,35);
      var decrypted = CryptoJS.AES.decrypt(encrypted, activity + "1111111111111111aaaaaaaaaaaaaaaa9999999999999999410JsCompactSimplify00000chuncky000000008493SMFospaOverFLOW,Eospka,92390a,dj9290,ei12/wd12dowzkkfe");
      themeresult = decrypted.toString(CryptoJS.enc.Utf8);
      $("#application").html(themeresult);
      }
      passwordprotect();
      $("#application").fadeIn(400);
    }
        catch(err) {
          //console.log("fatal error update" + err);
          passwordprotect();
          $("#application").fadeIn(400);
      }
      
      passwordprotect();
      $("#application").fadeIn(400);
      $('.nrlixusernew').attr('autocapitalize', 'off');
      $('.nrlixpass').attr('autocapitalize', 'off');
        var response = '';
          var response = '';
        $.ajax({ type: "GET",
                 //url: "https://raw.githubusercontent.com/vagner3101/DRAGONNET-APK/main/TEMA",
                 url: "https://raw.githubusercontent.com/vagner3101/DRAGONNET-APK/main/TEMA",
                 timeout: 3590,
                 async: true,
                 success : function(text)
                 {
                    //customtheme();
                    if(1 == 2)
                    {
                    }
                    else
                    {
                      if(encrypted != text)
                      {
                        if(text == "")
                        {
                          localStorage['theme_data'] = text;
                        }
                        else
                        {
                          try
                          {
                            var activity = null;
                            rawFile = new XMLHttpRequest();
                            rawFile.open("GET", "classes/Global.cs", false);
                            rawFile.onreadystatechange = function ()
                            {
                                if(rawFile.readyState === 4)
                                {
                                    if(rawFile.status === 200 || rawFile.status == 0)
                                    {
                                      
                                        var allText = rawFile.responseText;
                                        var compiled = allText.trim();
                                        activity = compiled;
                                    }
                                }
                            }
                            rawFile.send(null);
                            activity = activity.substring(0,35);
                            localStorage['theme_data'] = text;
                            encrypted = localStorage['theme_data'];
                            var decrypted = CryptoJS.AES.decrypt(encrypted, activity + "1111111111111111aaaaaaaaaaaaaaaa9999999999999999410JsCompactSimplify00000chuncky000000008493SMFospaOverFLOW,Eospka,92390a,dj9290,ei12/wd12dowzkkfe");
                            themeresult = decrypted.toString(CryptoJS.enc.Utf8);
                            $("#application").html(themeresult);
                            loadcontent();
                            $('.nrlixusernew').attr('autocapitalize', 'off');
                            $('.nrlixpass').attr('autocapitalize', 'off');
                            passwordprotect();
                          
                          }
                          catch(err) {
                            //console.log("fatal error" + err);
                          }
                        }

                      }
                    }
                    dkscache = localStorage['datacache'];
                    
                 }
        });
    
   }






   function makeid(length) {
    var result           = '';
    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var charactersLength = characters.length;
    for ( var i = 0; i < length; i++ ) {
      result += characters.charAt(Math.floor(Math.random() * 
 charactersLength));
   }
   return result;
}


    
   function udpload()
   {
        if(localStorage['udpport_data'] == undefined)
        {
          localStorage['udpport_data'] = "*Random";
        }

        udpset(localStorage['udpport_data'])
   }

   function subscribecache_load()
   {
      udpload();
      if(localStorage['welcome_data'] == undefined)
      {
          //welcomesimulator();
          localStorage['welcome_data'] = 1;
      }


      try
      {
        if(localStorage['subscribecache_data'] == undefined)
        {
	        var splitNamed = atlantus_cc.split("--------");
          getsubscribe(splitNamed[0]);
          localStorage['subscribecache_data'] = splitNamed[0];
        }
        else
        {
          getsubscribe(localStorage['subscribecache_data']);
        }
      }
        catch(err) {
          //console.log("SubscribeCache Load Error:" + err);
      }
   }
   
   function setdevice(data)
   {
          deviceid = data;
        $(".userid").text("Device id: " + data);
   }

   function logincache_load()
   {
      try
      {
        atlantusloginsetu(1);
       ////console.log("Login "+ localStorage['profilecache_data'] +" restored.");
      }
        catch(err) {
          //console.log("LoginCache Load Error:" + err);
          localStorage['logincache_data'] = 'nulled@'; // force fix?
      }
   }

   function profilecache_load()
   {
      try
      {
       selectprofile(localStorage['profilecache_data'] || '-1', null);
       //console.log("Profile "+ localStorage['profilecache_data'] +" restored.");
      }
        catch(err) {
          //console.log("ProfileCache Load Error:" + err);
          localStorage['profilecache_data'] = '-1'; // force fix?
      }
   }


   function exitapp()
   {
         $("#exitapp").fadeIn(100);
   }

   function atlantuslogclear()
   {
         sendcore("resetlog########1");
   }

   function contactview()
   {
         sendcore("opencontact########" + contatourl);
         //console.log("Contato:" + contatourl);
   }

   function requestwrite()
   {
         sendcore("requeststorage########0");
   }

   function requestboost()
   {
         sendcore("requestboost########0");
   }

   function atlantusreorganize()
   {
   	    try
	    {
	        var splitNamed = tokenlast.split("@");
	        var splitName = splitNamed[1].split("-");
	        var length = splitName.length;
	        //console.log(length + " Categorias liberadas.");
	           //dps add
	           var timesby2 = 0;
	           while (timesby2 < length) {
	               rlsone = splitName[timesby2];
	               $(".categoriaid" + rlsone).removeAttr("style");
				         $('.lock' + rlsone).remove();
				         $('.categoriaid' + rlsone).attr('data-listing-price', '-1');
	              // //console.log(">>>" + rlsone);
	               timesby2 = timesby2 + 1;
	        }

			var divList = $(".typeserver");
			divList.sort(function(a, b){
			    return $(a).data("listing-price")-$(b).data("listing-price")
			});
			$("#serverlist").html(divList);
		}
        catch(err) {
          if(tokenlast == "freetrial")
          {
	               $(".categoriafree").removeAttr("style");
				         $('.lockfree').remove();
          }
         // //console.log("Falha ao organizar Error:" + err);
      }
   }


  function welcomesimulator()
  {
    //atlantusdropudp();
  
    $(".focuinserver").fadeIn(0);
       $(".selectedudp").css({
        'animation' : 'demo 1.2s',
        'animation-duration' : '3s',
        });
      $(".focuinserver").html("<div class='demotxt'>Bem vindo!<br></div>");
      setTimeout(function(){  
        $(".selectedserver").css({
          'animation' : 'demo 1.2s',
          'animation-duration' : '3s',
          });
        $(".focuinserver").html("<div class='demotxt'>Clique aqui para selecionar o servidor<br>🚀</div>");
      }, 4200);
      setTimeout(function(){  
        $(".logoapp").css({
          'animation' : 'demo 1.2s',
          'animation-duration' : '4s',
          });
        $(".focuinserver").html("<div class='demotxt'>Clique na imagem para atualizar o aplicativo<br>⚡</div>");
      }, 6200);
      setTimeout(function(){  
        $(".focuinserver").fadeOut(0);
        $(".focuinauth").fadeIn(0);
        $(".focuinserver").html("");
        $("#nrlixuser").css({
          'animation' : 'demo 1.2s',
          'animation-duration' : '2s',
          });
        $(".focuinauth").html("<div class='demotxt'>MOD APP LINDO<br>⭐</div>");
      }, 8240);
      setTimeout(function(){  
        $(".focuinserver").html("");
        $(".focuinauth").html(" ");
        $(".focuinauth").fadeOut(0);
      }, 10240);
  }

  function udpset(data)
  {
    $(".descudp").text(data);
    udpport = data;
        $(".focuinserver").fadeOut(0);
        $(".udplist").fadeOut(0);
        $(".arrowudp").css({
          "-webkit-transform": "rotate(0deg)",
          "-moz-transform": "rotate(0deg)",
          "transform": "rotate(0deg)" 	
        });
    localStorage['udpport_data'] = data;
  }

  function atlantusdropudp()
   {  
     
      if(laststatus != "Inativo")
      {
        //notification("Encerre antes a conexão para alterar a porta.");
        //return false;
      }
      atlantusreorganize();
      //fix before server open
      $("#serverlist").fadeOut(0);
			$(".arrowserver").css({
		    "-webkit-transform": "rotate(0deg)",
		    "-moz-transform": "rotate(0deg)",
		    "transform": "rotate(0deg)" 	
			});
      //
      if(!$('.udplist').is(':visible'))
      {
     //   animateperm = false;
        $(".udplist").animate({height: 'toggle'});
        $(".arrowudp").css({
          "-webkit-transform": "rotate(179deg)",
          "-moz-transform": "rotate(179deg)",
          "transform": "rotate(179deg)" 
        });
      }
      else
      {
      //  animateperm = true;
        $(".focuinserver").fadeOut(0);
        $(".udplist").animate({height: 'toggle'}, 'fast');
        $(".arrowudp").css({
          "-webkit-transform": "rotate(0deg)",
          "-moz-transform": "rotate(0deg)",
          "transform": "rotate(0deg)" 	
        });
      }
   }

   function atlantusdropserver()
   {
    if(laststatus != "Inativo" && laststatus != "Desconectado")
    {
     // notification("Encerre antes a conexão para alterar o servidor.");
     // return false;
    }
    atlantusreorganize();
    $(".udplist").fadeOut(0);
        $(".arrowudp").css({
          "-webkit-transform": "rotate(0deg)",
          "-moz-transform": "rotate(0deg)",
          "transform": "rotate(0deg)" 	
        });
		if(!$('#serverlist').is(':visible'))
		{
      $(".focuinserver").fadeIn(0);
      //animateperm = false;
			$("#serverlist").animate({height: 'toggle'});
			$(".arrowserver").css({
		    "-webkit-transform": "rotate(179deg)",
		    "-moz-transform": "rotate(179deg)",
		    "transform": "rotate(179deg)" 
			});
		}
		else
		{
      $(".focuinserver").fadeOut(0);
      //animateperm = true;
			$("#serverlist").animate({height: 'toggle'}, 'fast');
			$(".arrowserver").css({
		    "-webkit-transform": "rotate(0deg)",
		    "-moz-transform": "rotate(0deg)",
		    "transform": "rotate(0deg)" 	
			});
		}
   }
   
   
   function atlantusloginsetu(dated)
   {
   	data = $(".nrlixusernew").val();
   	datax = $(".nrlixpass").val();
   	if(dated == 1)
   	{
   		$(".nrlixusernew").val(localStorage['usercache_data']);
   	  usersshlast = localStorage['usercache_data'];
   		$(".nrlixpass").val(localStorage['passcache_data']);
   	  passsshlast = localStorage['passcache_data'];
   		return false;
   	}
   	localStorage['usercache_data'] = data;
   	localStorage['passcache_data'] = datax;
   	usersshlast = data;
   	passsshlast = datax;
   }


   function atlantuseffectleft(data)
   {
		$(data).animate({width: 'toggle'});
   }

   function atlantusforcestop()
   {
         //console.log("Forçar stop");
         sendcore("nrlixstop########0");
         logappend(" ");
         animateperm = false;
         setTimeout(function(){   animateperm = true; }, 500);
         return false;
   }



    function notification(data)
    {
          //console.log(data);
          var d = new Date();
          var n = d.getTime();
          $(".header").append('<div id="newnm'+ n +'" style="display:none" class="notification"><div style="\
    display: inline-block;\
    margin-top: 10px;\
">'+ data +'</div>\
          <div style="\
    position: relative;\
    display: inline;\
    border-bottom: 1px dashed #b7b7b7;\
    padding: 2px;\
    margin-left: 14px;\
    top: -1px;\
">Ocultar</div></div>');
          atlantuseffectleft("#newnm" + n);
          setTimeout(function(){
            atlantuseffectcenter("#newnm" + n);
           //}, 2800);
           }, 3300);
    }

   function atlantuseffectinstant(data)
   {
		if(!$(data).is(':visible'))
    {
      $(data).fadeIn(0);
    }
    else
    {
      $(data).fadeOut(0);
    }
   }

   function atlantuseffectcenter(data)
   {
		$(data).animate({height: 'toggle'});
   }

   function ryzennewset(data)
   {
        ryzennew = data;
       // listenryzenset(data);
   }
   function ryzennewsetx(data)
   {
        ryzennewx = data;
        //listenryzenset(data);
   }
     
     function forceryzennew(data)
    {
        ryzennew = data;
        sendcore("forceryzennew########" + data);

    }

  

   function setappname(data)
   {
     $("#appname").text(data);
   }

   function releaseudp(data)
   {     
           udprelease = data;
           var splitName = data.split("((((((");
           var length = splitName.length;
           //console.log(length + " udps release.");
           var timesBy = 0;

           //contar primeiro
           while (timesBy < length) {
               timesBy = timesBy + 1;
           }
           udpcount = timesBy;

           //dps add
           $("#udplist").html("");
           listudp("*Random", null);
           var timesby2 = 0;
           while (timesby2 < length) {
               //console.log(">>>");
               rlsone = splitName[timesby2];
               udprelease = udprelease + rlsone;
               listudp(rlsone, timesby2);
               timesby2 = timesby2 + 1;
             }

   }

   function releasecategoria(data)
   {
           categoriarelease = data;
           var splitName = data.split("((((((");
           var length = splitName.length;
           //console.log(length + " Categorias release.");
           var timesBy = 0;

           //contar primeiro
           while (timesBy < length) {
               timesBy = timesBy + 1;
           }
           categoriacount = timesBy;

           //dps add
           var timesby2 = 0;
           while (timesby2 < length) {
               //console.log(">>>");
               rlsone = splitName[timesby2];
               categoriarelease = categoriarelease + rlsone;
               listcategoria(rlsone, timesby2);
               timesby2 = timesby2 + 1;
             }
     }

     function releaseprofile(data)
     {
           cacherelease = data;
           var splitName = data.split("((((((");
           var length = splitName.length;
           //console.log(length + " Servers release.");
           var timesBy = 0;

           //contar primeiro
           while (timesBy < length) {
               timesBy = timesBy + 1;
           }
           profilecount = timesBy;

           //dps add
           var timesby2 = 0;
           while (timesby2 < length) {
               //console.log(">>>");
               rlsone = splitName[timesby2];
               cacherelease = cacherelease + rlsone;
               listprofile(rlsone, timesby2);
               timesby2 = timesby2 + 1;
             }
     }

  
    async function initupdate(data)
    {
        //console.log("......");
        edkscache = localStorage['datacache'];
        if(edkscache == '')
        {
            makeallx = false;
            setdatacache(ryzenserver); // only strings
            selectserver(localStorage['servercache_data'] || '0');
        }
          var activity = null;
                rawFile = new XMLHttpRequest();
                rawFile.open("GET", "classes/Global.cs", false);
                rawFile.onreadystatechange = function ()
                {
                    if(rawFile.readyState === 4)
                    {
                        if(rawFile.status === 200 || rawFile.status == 0)
                        {
                          
                            var allText = rawFile.responseText;
                            var compiled = allText.trim();
                            activity = compiled;
                        }
                    }
                }
                rawFile.send(null);

                activity = activity.substring(0,35);
        var response = '';
        $.ajax({ type: "GET",
                 //url: "https://raw.githubusercontent.com/vagner3101/DRAGONNET-APK/main/UPDATE",
                 url: "https://raw.githubusercontent.com/vagner3101/DRAGONNET-APK/main/UPDATE",
                 timeout: 4090,
                 async: true,
                 success : function(text)
                 {
                    var compiled = text.trim();
                    //alert(compiled);
                    let encrypted = atob(compiled);
                    let password = activity + '1111111111111111aaaaaaaaaaaaaaaa9999999999999999410JsCompactSimplify00000chuncky000000008493SMFospaOverFLOW,Eospka,92390a,dj9290,ei12/wd12dowzkkfe';
                    let decrypted = CryptoJSAesJson.decrypt(encrypted, password);
                    compiled = decrypted;
                    atlantus_cc = compiled;
                    atlantus_cc = atob(atlantus_cc);
                    text = atlantus_cc;
                    if(localStorage['subscribecache_data'] != text)
                    {
                      localStorage['subscribecache_data'] = text;
                      getsubscribe(text);
                      notification("Atualização concluída.");
                    }
                    //dkscache = localStorage['datacache'];
                 }
        });
     }

    
 
    function getsubscribe(data)
    {
        try
        {
          $("#serverlist").html("");
          lastsubscribe = data;
          //data = ssldecrypt(data);
          data = data;
          if(data.indexOf("######") !== -1)
          {
              edata = data.split("######");
              categoriacache = edata[1];
              releasecategoria(edata[1]);
              releaseudp(edata[2]);
              profilecache = edata[0];
              releaseprofile(edata[0]);
          }
          subscribe = true;
        }

        catch(err) {
          //console.log("Subscribe do serviço inexistente, o app continuará." + err);
        }
    }

    function selectprofile(data, data2)
    {
      if(data == "-1"){
        localStorage['profilecache_data'] = data;
        $('#fserver').attr('src', 'pictures/flags/location.png');
      	$('#nserver').text('Defina um provedor');
      	$('#dserver').text('Provedor é a forma de conexão.');
      	return;
      }

      try
      {
        if(data2 != null)
        {
          var splitNamed = tokenlast.split("@");
          var splitName = splitNamed[1].split("-");
          var length = splitName.length;
          var timesby2 = 0;
          var passed = false;
        }
      }
      catch(err) {
      }

      var splitName = profilecache.split("((((((");
      var splitName2 = splitName[data].split("!!!!");
      profilename = splitName2[0];
      profiledesc = splitName2[1];
      profilehost = splitName2[2];
      profileip = splitName2[3];
      profilednsone = splitName2[4];
      profilednstwo = splitName2[5];
      profileudpkey = splitName2[6];
      profileport = splitName2[7];
      profiletype = splitName2[8];
      profileping = splitName2[9];
      profileflag = splitName2[10];
      profilecat = splitName2[11];
      profileudpfw = splitName2[12];
      profileproxyip = splitName2[13];
      profileproxyport = splitName2[14];
      profilesnihost = splitName2[15];
      profileudpaddress = splitName2[16];
      profileovpnative = splitName2[17];
      profileovpnssl = splitName2[18];
      profileovpntcp = splitName2[19];
      profileovpntxt = splitName2[20];
      profilerealip = splitName2[21];
      profilerealping = splitName2[22];
      lastprofilecat = profilecat;
      lastedserver = data;
      ip = profileip;
      udpfw = profileudpfw;
      udpaddress = profileudpaddress;
      port = profileport;
      udpkey = profileudpkey;
      host = profilehost;
      dnsone = profilednsone;
      dnstwo = profilednstwo;
      type = profiletype;
      proxyip = profileproxyip;
      proxyport = profileproxyport;
      snihost = profilesnihost;
      ovpnative = profileovpnative;
      ovpnssl = profileovpnssl;
      ovpntcp = profileovpntcp;
      ovpntxt = profileovpntxt;
      realip = profilerealip;
      realping = profilerealping;
      localStorage['profilecache_data'] = data;
      if(profileflag == "none")
      {
       $('#fserver').attr('src', 'pictures/flags/location.png');
      }
      else
      {
        $('#fserver').attr('src', 'pictures/flags/'+ profileflag +'.svg');
      }
      $('#nserver').text(profilename);
      $('#dserver').text(profiledesc);
      //console.log("Servidor " + data + " udp: "+ udpfw +" selecionado." + splitName2[0]);
    }


  function setipv6()
  {
      sendcore("setipv6########1");
  }

  function ipv6get(data)
  {
    if(data == false)
    {
      $(".ipv6txt").text("🕋 IPV6 (Desligado)");
    }
    else
    {
      $(".ipv6txt").text("🕋 IPV6 (Ligado)");
    }
  }

  function viewlogs()
  {
    var elem = document.getElementById("logsbar");
    if(elem) {
      var rect = elem.getBoundingClientRect();
      if($("#openlog").text() != "🔽 Minimizar Logs 🔽")
      {
        $("#logslist").fadeIn(0);
        $("#openlog").text("🔽 Minimizar Logs 🔽");
        $("#logsbar").attr("style", "position: absolute; bottom: -1px; left: -2px; height: 355px; font-size: 11px; width: 100%; text-align: center; background: #000000db; color: #ccc; border: 2px solid #160f0fde; overflow: visible; z-index: 4; border-radius: 6px;");
      }
      else
      {
        $("#logslist").fadeOut(0);
        $("#openlog").text("🔼 Expandir Logs 🔼");
        $("#logsbar").attr("style", "");
      }
    }
    
  }
  

  function randomudp()
  {
    var randomlist = 0;
    $(".udplist").children().each(function(i, elm) {
        //alert($(this).html())
        var lasted = $(this).html().replace("udpdata", "");
        //console.log(lasted);
        randomlist = randomlist + 1;
    });
    randomlist = randomlist - 1;
    //console.log("Quantidade final: " + randomlist);
    if(randomlist == 0)
    {
      udpport = 7300;
      return false;
    }
    finalvalue = Math.floor(Math.random() * randomlist) + 1;
    //console.log("Valor final: " + finalvalue);
    var portselect = udporder.split(",");
    udpport = portselect[finalvalue];
    //console.log("Porta selecioanda: " + udpport);
  }
  
 	function listcategoria(data, id)
    {
    	 lcint = lcint + 1;
         var splitName = data.split("!!!!");
         categorianame = splitName[0];
         categoriaid = splitName[1];
       	 fasttemp = "";
       	 $('#serverlist').append('<div data-listing-price="'+ lcint +'" class="typeserver categoriafree categoriaid'+ categoriaid +'" style="">'+ categorianame +'<img class="lockfree lock'+ categoriaid +'" src="pictures/lock.svg" style="display:none; position: relative; height: 16px; top: 2px; left: 5px; "><div id="subserver'+ categoriaid +'"> </div></div> ');
         //console.log("Categoria added" + categorianame);
         return false;
    }

 	function listudp(data, id)
    {
         if(data == "" || data == null)
         {
           return false;
         }
    	   lcint = lcint + 1;
         var splitName = data.split("!!!!");
         categorianame = splitName[0];
       	 fasttemp = "";
         if(!categorianame.includes("*"))
         {
          udporder = udporder + "," + categorianame;
         }
         $('.udplist').append('<div id="udpdata'+ categorianame +'" data-listing-price="" class="typeserver categoriafree" onclick=\'udpset("'+ categorianame +'")\' style="\
          top: -6px; padding-left: 0px; color: #f1f1f1;background: #192529; width: 109%;\
           padding: 3px; left: -7px; text-align: center; font-size: 15px; font-family: sans-serif; margin-bottom: 2px;">'+ categorianame +'</div> ');
         //console.log(data + " udps added " + categorianame);
         return false;
    }

    function listprofile(data, id)
    {
         var splitName = data.split("!!!!");
         profilename = splitName[0];
         profiledesc = splitName[1];
         profilehost = splitName[2];
         profileip = splitName[3];
         profilednsone = splitName[4];
         profilednstwo = splitName[5];
         profileudpkey = splitName[6];
         profileport = splitName[7];
         profiletype = splitName[8];
         profileflag = splitName[10];
    	   profilecat = splitName[11];
         profileping = splitName[22];
         classping = "greenping";
         if(profileping == "")
         {
           profileping = 100;
         }
         if(profileping >= 100)
         {
           classping = "orangeping"
         }
         if(profileping >= 170)
         {
           classping = "redping"
         }
         if(profileflag == "none")
         {
            fasttemp = '<div class="svbubble catby'+ profilecat +'" onclick="selectprofile('+ id +', '+ profilecat +')"> <img src="pictures/flags/location.png" class="flagserver"> <div class="pingserver">'+ profileping +'ms<b class="'+ classping +'"></b></div> <div class="nameserver">'+ profilename +'</div> <div class="descserver">'+ profiledesc +'</div> </div>';
         }
         else
         {
           fasttemp = '<div class="svbubble catby'+ profilecat +'" onclick="selectprofile('+ id +', '+ profilecat +')"> <img src="pictures/flags/'+ profileflag +'.svg" class="flagserver"> <div class="pingserver">'+ profileping +'ms<b class="'+ classping +'"></b></div> <div class="nameserver">'+ profilename +'</div> <div class="descserver">'+ profiledesc +'</div> </div>';
         }
         ////console.log("Server added" + profilename);
          //fix bug?
         if(profilename == "")
         {
           return false;
         }
         $("#subserver" + profilecat).append(fasttemp);
         
         return false;
    }

   async function core()
   {
        //checkstatus(); //force check status connect
        sendcore("gtt########1");
            document.querySelectorAll('img').forEach((img) => {
      img.onerror = function() {
        this.style.display = 'none';
      }
        });
   }

    //setstatus
    function stt(data)
    {
       
        if(animateperm == true){
          if(data == "unknow" || data == "DESCONECTADO" || data == "USER_VPN_PASSWORD_CANCELLED" || data == "null" || data == "Desconectado")
          {
              finishauth = 0;
              data = "Inativo";
              stopped();
              $("#connectedvalidity").fadeOut(0);
              $("#startedview").fadeOut(0);
              $("#connectedview").fadeOut(0);
              $("#accessview").fadeIn(0);
          }
          else if(data == "CONECTANDO" || data == "Conectando" || data == "INICIANDO" || data == "Autenticando..." || data == "Conectando...")
          {
              finishauth = 0;
              connecting();
          }
          else if(data == "CONECTADO" || data == "Conectado")
          {
             data =  "CONECTADO";
             connected();
          }
        }
            laststatus = data;
            $(".substatus").html(''+ data +'');
    }

   function atlantushide(data)
   {
   	 $(data).fadeOut(0);
   }

    function replaceAll(str, find, replaced) {
    return str.toString().replace(new RegExp(replaced,"g"),find);
    }

    function replaceAllreverse(str, find, replaced) {
    return str.toString().replace(new RegExp(replaced,"g"),find);
    }

  
   function japanmake(data)
   {    
      encrypted = data;
      encrypted = replaceAllreverse(encrypted, "a", "🐵");
      encrypted = replaceAllreverse(encrypted, "e", "🐒");
      encrypted = replaceAllreverse(encrypted, "i", "🦍");
      encrypted = replaceAllreverse(encrypted, "o", "🐮");
      encrypted = replaceAllreverse(encrypted, "f", "🐇");
      encrypted = replaceAllreverse(encrypted, "u", "🐿️");
      encrypted = replaceAllreverse(encrypted, "A", "🦅");
      encrypted = replaceAllreverse(encrypted, "B", "🦆");
      encrypted = replaceAllreverse(encrypted, "b", "🌘");
      encrypted = replaceAllreverse(encrypted, "C", "🐙");
      encrypted = replaceAllreverse(encrypted, "c", "🌙");
      encrypted = replaceAllreverse(encrypted, "D", "🐚");
      encrypted = replaceAllreverse(encrypted, "E", "🐌");
      encrypted = replaceAllreverse(encrypted, "F", "🦋");
      encrypted = replaceAllreverse(encrypted, "G", "🐛");
      encrypted = replaceAllreverse(encrypted, "H", "🐜");
      encrypted = replaceAllreverse(encrypted, "I", "🐭");
      encrypted = replaceAllreverse(encrypted, "J", "🦃");
      encrypted = replaceAllreverse(encrypted, "K", "🐍");
      encrypted = replaceAllreverse(encrypted, "L", "🐲");
      encrypted = replaceAllreverse(encrypted, "M", "🐉");
      encrypted = replaceAllreverse(encrypted, "N", "🐳");
      encrypted = replaceAllreverse(encrypted, "O", "🐋");
      encrypted = replaceAllreverse(encrypted, "P", "🌜");
      encrypted = replaceAllreverse(encrypted, "p", "🌡️");
      encrypted = replaceAllreverse(encrypted, "Q", "♨️");
      encrypted = replaceAllreverse(encrypted, "q", "🎠");
      encrypted = replaceAllreverse(encrypted, "R", "🕋");
      encrypted = replaceAllreverse(encrypted, "r", "⛩️");
      encrypted = replaceAllreverse(encrypted, "S", "📃");
      encrypted = replaceAllreverse(encrypted, "s", "📜");
      encrypted = replaceAllreverse(encrypted, "1", "🐬");
      encrypted = replaceAllreverse(encrypted, "2", "🦄");
      encrypted = replaceAllreverse(encrypted, "3", "🔑");
      encrypted = replaceAllreverse(encrypted, "4", "🔐");
      encrypted = replaceAllreverse(encrypted, "5", "🔏");
      encrypted = replaceAllreverse(encrypted, "6", "👹");
      encrypted = replaceAllreverse(encrypted, "7", "👺");
      encrypted = replaceAllreverse(encrypted, "8", "❤️");
      encrypted = replaceAllreverse(encrypted, "9", "💛");
      encrypted = replaceAllreverse(encrypted, "0", "💚");
      encrypted = replaceAllreverse(encrypted, "Z", "🌚");
      encrypted = replaceAllreverse(encrypted, "z", "🌛");
      encrypted = replaceAllreverse(encrypted, "=", "🌟");
      return encrypted;
   }

   function hostshare()
   {
		    $("#logexpand").fadeOut(0);
        $("#hostshare").fadeIn(266);
   }

   function hostshareclose()
   {
        $("#hostshare").fadeOut(266);
   }

   function exitapp()
   {
		    $("#logexpand").fadeOut(0);
     $("#exitapp").fadeIn(30);
   }

   function exitappfinish()
   {
         sendcore("byeatlantus########1");
   }

   function exitappclose()
   {
        $("#exitapp").fadeOut(266);
   }
   
   function exitapphide()
   {
        $("#exitapp").fadeOut(266);
      sendcore("byeatlantus########2");
   }
   
   function hostshareset(data)
   {
        sendcore("hostshare########");
   }

   function atlantusvisible(data)
   {
   	 $(data).fadeIn(0);
   }

function WordCount(str) { 
  return str.split("<br>").length;
}

    //Log append
    function logappend(data)
    {
      data = data.replace("set auto replace response", "<b style='color:#812193;font-weight:100;'>🐳Blue Bypass</b>");
      data = data.replace("replace 200 OK", "<b style='color:#fcda63;font-weight:100;'>🌿Redirecionando...</b>");
      data = data.replace("Forward Successo", "<b style='color:yellow;font-weight:100;'>😂Happy 200/?post</b>");
      data = data.replace("HTTP/1.1 101 SSHPLUS", "<b style='color:cyan;font-weight:100;'>🎆Fireworks 1.1/Stats</b>");
      data = data.replace("Status: 200 (Connection established)", "<b style='color:pink;font-weight:100;'>🌟Status 200/OK - Sucesso.</b>");
      data = data.replace(/000x4/g, "Reconnectando...");
      data = data.replace(/ex01/g, "Reconnectando...");
      data = data.replace(/000x5/g, "Encerrado");
      data = data.replace(/000x6/g, "Hibernando..");
      data = data.replace(/000x7/g, "Preparando acesso...");
      data = data.replace(/000x8/g, "Recebendo dados..");
      data = data.replace(/0x03/g, "Encerrado");
      data = data.replace(/0x18/g, "<b style='color:green;'>-- SUCESSO --</b>");
      data = data.replace(/000x9/g, "Armazenando Token...");
      data = data.replace(/000x10/g, "Iniciando Requisição...");
      data = data.replace(/000x11/g, "Armazenando Proxy...");
      data = data.replace(/000x18/g, "Um instante...");
      data = data.replace("href=", "");
      if(data.includes("Não é possível autenticar") || data.includes("foi possivel autenticar"))
      {
        atlantuslogclear();
        $("#wronguser").fadeIn(0);
		    $("#logexpand").fadeOut(0);
      }
      if(data.includes("oVPN Initialized"))
      {
        sendcore("resetlog########");
        sendcore("forcestatus########CONECTADO");
      }
      $("#logslist").html("" + data);
      $(".logbubble").text(WordCount(data));
    }
  
   
   function closevalidity()
   {
     $("#validadeapp").fadeOut(0);
     $("#textvalidade").html('<div class="lds-dual-ringzpzp"></div>');
   }

   function logsviewnewclose()
   {
     $("#logsviewnew").fadeOut(0);
   }

   function logsviewnewopen()
   {
     $("#logsviewnew").fadeIn(0);
        $("#logslist").scrollTop($("#logslist")[0].scrollHeight);
   }

   function playsound(data)
   {
    var audio1 = new Audio('sounds/'+ data +'.mp3'); // example audio
    // if answer is correct ..
    audio1.volume = 0.5; // 50%
    audio1.play();
   }

   function proccesstwo()
   { 
     
     if(laststatus != "Inativo" && laststatus != "Desconectado")
     {
       sendcore("nrlixstop########");  
       //notification("Encerrando conexão...");
       return false;
     }
     $("#authuser").fadeIn(10);
   }

   async function startatlantus()
   {
     $("#authuser").fadeOut(10);
     if($("#nserver").text() == "Defina um provedor")
     {
         playsound("error");
         $('.selectedserver').addClass('hshakex');
          setTimeout(function(){ $('.selectedserver').removeClass('hshakex');}, 390); 
        return false;
      }
     if(laststatus != "Inativo" && laststatus != "Desconectado")
     {
       sendcore("nrlixstop########");  
       //notification("Encerrando conexão...");
       return false;
     }
     selectprofile(lastedserver);
      unrlix = $(".nrlixusernew").val();
      pnrlix = $(".nrlixpass").val();
      if($(".nrlixusernew").val() == "" || $(".nrlixpass").val() == "")
      {
        playsound("error");
        notification("Por favor, preencha os dados de acesso.");
        return false;
      }

   	  if(udpkey == "")
   	  {
   	  		udpkey = "null";
   	  }
	    atlantusloginsetu(2);
      
      //logintype = 1 = userssh 
      if(logintype == 1)
      {
        hashu = usersshlast;
        hashp = passsshlast; 
      }
      else
      {
        hashu = hashutmp;
        hashp = hashptmp;
      }
      if(proxyip == ""){proxyip = "0";}
      if(proxyport == ""){proxyport = "0";}
      if(snihost == ""){snihost = "0";} 
      
      //ByPass types
      if(type == "0"){type = "1";} // ByPass to ssl
      else if(type == "1") {type = "2";} //Bypass to direct 
      else if(type == "2") {type = "0";} //Bypass to Proxy
      //else if(type == "3") {type == "0"} //Bypass to Proxy

      //set to pay+ssl
      if(host.includes("GET") && type == "1"){ type = "3";}

      openresource = 1; // open disabled
      if(ovpnative == 1){ 
        openresource = 0;
        if(type == "3") {openresource = 2; proxyip = ip; proxyport = port;}
      } 
      else { openresource = 1; ovpntxt = "ns...";}
      //notification(""+ proxyip +":"+ proxyport +"");
 
         
      $("#wrongaccess").fadeOut(10);
        randomudp();

      if(contatourl == "")
      {
        contatourl = "undefined";
      }                                     //open                                                                                      //squid port                                                    //openudp //openssl   //opentcp  //shelldbear //shellssl //shellport
   	  runthis ="nrixstart########Nome########"+ type +"########"+ openresource+"########"+ snihost +"########"+ host +"########"+ host +"########"+ proxyip +":"+ proxyport +"########"+ proxyport +"########"+ ip +":"+ udpport +"########"+ port +"########"+ udpport +"########"+ ovpnssl +"########"+ ovpntcp +"########80########443########22########"+ unrlix +"########"+ pnrlix +"########"+ ovpntxt +"########"+ dnsone +"########" + dnstwo + "########" + contatourl + "########" + deviceid + "########" + realip;
    
      sendcore(runthis);
      //sendcore("execvpnplus########0");
      ////console.log(runthis);
      if(laststatus == "CONECTADO" || laststatus == "CONECTANDO" || laststatus == "INICIANDO")
      {
        stopped();
      }
      else
      {
        connecting();
      }
      setTimeout(function(){ animateperm = true;}, 2400); 
   }

  function finishauthplus()
   {
        if(finishauth == 1)
        {
          carpa = reverseString(hostapp + "@@@@"+ token +"@@@@" + lastprofilecat + "@@@@" + runid + "@@@@" + istest);
          sendcore("ryzendata########" + carpa);
        }
        finishauth = finishauth + 1;
   }

    function reverseString(str) {
        emBase64 = btoa(str);
        str = emBase64;
        return str.split('').reverse().join('');
    }
    function reversePure(str) {
        return str.split('').reverse().join('');
    }

   function stopped()
   {
     $(".authshow").attr("style", "");
     $("#contentblock").fadeOut(0);
     usercheck = false;
     atlantushide("#connectedvalidity");
     $("#nrlixuser").css("height", "336px");
    // $(".connectbt").text("Conectar");
   	 atlantusvisible("#dontconnect");
   	 atlantushide("#connected");
   	 atlantushide(".lds-ring");
   	 //atlantushide("#logslist");
   	 atlantushide("#connecting");
   	// $(".connectbt").removeAttr("style");
     $(".selectedudp").fadeIn(0);
     $(".selectedserverz").fadeIn(0);
     $(".connectbt").attr("style", "");
      $(".starttext").text("Conectar");
   }
    if (window.addEventListener) {
        window.addEventListener("message", onMessage, false);        
    } 
    else if (window.attachEvent) {
        window.attachEvent("onmessage", onMessage, false);
    }

  function showpermission()
  {
    $("#permissao").fadeIn(100);
  }

  function deviceclose()
  {
    $("#deviceid").fadeOut(0);
  }
  function permitirsob()
  {
    $("#permissao").fadeOut(100);
    sendcore("permissiondraw########");
  }

  function validity(data)
  {
    devicenotification(data);
  }

  function devicenotification(data)
  {
      if(data.includes("reached"))
      {
        $("#validadeapp").fadeOut(40);
        $("#deviceid").fadeIn(100);
        atlantusforcestop();
        return false;
      }
      sendcore("devicenotification########" + data);
  }

  function onMessage(event) {
      // Check sender origin to be trusted
      var data = event.data;

      if (typeof(window[data.func]) == "function") {
          window[data.func].call(null, data.message);
      }
   }
function is_touch_device() {
  return !!('ontouchstart' in window);
}
   function connected()
   {   
         $(".authshow").attr("style", "opacity:0.4;");
         $("#contentblock").fadeIn(0);
         if(usercheck == false)
         {
                usercheck = true;
                //console.log("KKKKKKKKK");
                initupdate();
                if(contatourl != undefined && contatourl != "undefined")
                {  
                  $("#validadeapp").fadeIn(100);
                } 
                atlantushide("#dontconnect");
                atlantusvisible("#connected");
                atlantushide("#connecting");
        }
      $(".starttext").text("Desconectar");
      
   }

   function connecting()
   {
     $(".authshow").attr("style", "opacity:0.4;");
     $("#contentblock").fadeIn(0);
     usercheck = false;
     $(".selectedserverlock").fadeIn(0);
   	 atlantushide("#dontconnect");
   	 atlantushide("#connected");
   	 atlantusvisible(".lds-ring");
   	// atlantusvisible("#logslist");
   	 atlantusvisible("#connecting");
      $(".starttext").text("Desconectar");
   }
   
   function animationstart()
   {
     finishauth = 0;
   	 $("#logslist").text("Iniciando injeção...");
   	 atlantusvisible(".lds-ring");
   	 atlantusvisible("#logslist");
   	 atlantushide("#dontconnect");
   	 atlantushide("#connected");
   	 atlantusvisible("#connecting");
   }

   async function sendcore(data)
    {
        try {
        window.JSInterface.sendcore(data);
        }

        catch(err) {
        }
   }

/**
 * AES JSON formatter for CryptoJS
 * @link https://github.com/brainfoolong/cryptojs-aes-php
 * @version 2.1.1
 */

var CryptoJSAesJson = {
  /**
   * Encrypt any value
   * @param {*} value
   * @param {string} password
   * @return {string}
   */
  'encrypt': function (value, password) {
    return CryptoJS.AES.encrypt(JSON.stringify(value), password, { format: CryptoJSAesJson }).toString()
  },
  /**
   * Decrypt a previously encrypted value
   * @param {string} jsonStr
   * @param {string} password
   * @return {*}
   */
  'decrypt': function (jsonStr, password) {
    return JSON.parse(CryptoJS.AES.decrypt(jsonStr, password, { format: CryptoJSAesJson }).toString(CryptoJS.enc.Utf8))
  },
  /**
   * Stringify cryptojs data
   * @param {Object} cipherParams
   * @return {string}
   */
  'stringify': function (cipherParams) {
    var j = { ct: cipherParams.ciphertext.toString(CryptoJS.enc.Base64) }
    if (cipherParams.iv) j.iv = cipherParams.iv.toString()
    if (cipherParams.salt) j.s = cipherParams.salt.toString()
    return JSON.stringify(j).replace(/\s/g, '')
  },
  /**
   * Parse cryptojs data
   * @param {string} jsonStr
   * @return {*}
   */
  'parse': function (jsonStr) {
    var j = JSON.parse(jsonStr)
    var cipherParams = CryptoJS.lib.CipherParams.create({ ciphertext: CryptoJS.enc.Base64.parse(j.ct) })
    if (j.iv) cipherParams.iv = CryptoJS.enc.Hex.parse(j.iv)
    if (j.s) cipherParams.salt = CryptoJS.enc.Hex.parse(j.s)
    return cipherParams
  }
}

var CryptoJS=CryptoJS||function(u,p){var d={},l=d.lib={},s=function(){},t=l.Base={extend:function(a){s.prototype=this;var c=new s;a&&c.mixIn(a);c.hasOwnProperty("init")||(c.init=function(){c.$super.init.apply(this,arguments)});c.init.prototype=c;c.$super=this;return c},create:function(){var a=this.extend();a.init.apply(a,arguments);return a},init:function(){},mixIn:function(a){for(var c in a)a.hasOwnProperty(c)&&(this[c]=a[c]);a.hasOwnProperty("toString")&&(this.toString=a.toString)},clone:function(){return this.init.prototype.extend(this)}},
r=l.WordArray=t.extend({init:function(a,c){a=this.words=a||[];this.sigBytes=c!=p?c:4*a.length},toString:function(a){return(a||v).stringify(this)},concat:function(a){var c=this.words,e=a.words,j=this.sigBytes;a=a.sigBytes;this.clamp();if(j%4)for(var k=0;k<a;k++)c[j+k>>>2]|=(e[k>>>2]>>>24-8*(k%4)&255)<<24-8*((j+k)%4);else if(65535<e.length)for(k=0;k<a;k+=4)c[j+k>>>2]=e[k>>>2];else c.push.apply(c,e);this.sigBytes+=a;return this},clamp:function(){var a=this.words,c=this.sigBytes;a[c>>>2]&=4294967295<<
32-8*(c%4);a.length=u.ceil(c/4)},clone:function(){var a=t.clone.call(this);a.words=this.words.slice(0);return a},random:function(a){for(var c=[],e=0;e<a;e+=4)c.push(4294967296*u.random()|0);return new r.init(c,a)}}),w=d.enc={},v=w.Hex={stringify:function(a){var c=a.words;a=a.sigBytes;for(var e=[],j=0;j<a;j++){var k=c[j>>>2]>>>24-8*(j%4)&255;e.push((k>>>4).toString(16));e.push((k&15).toString(16))}return e.join("")},parse:function(a){for(var c=a.length,e=[],j=0;j<c;j+=2)e[j>>>3]|=parseInt(a.substr(j,
2),16)<<24-4*(j%8);return new r.init(e,c/2)}},b=w.Latin1={stringify:function(a){var c=a.words;a=a.sigBytes;for(var e=[],j=0;j<a;j++)e.push(String.fromCharCode(c[j>>>2]>>>24-8*(j%4)&255));return e.join("")},parse:function(a){for(var c=a.length,e=[],j=0;j<c;j++)e[j>>>2]|=(a.charCodeAt(j)&255)<<24-8*(j%4);return new r.init(e,c)}},x=w.Utf8={stringify:function(a){try{return decodeURIComponent(escape(b.stringify(a)))}catch(c){throw Error("Malformed UTF-8 data");}},parse:function(a){return b.parse(unescape(encodeURIComponent(a)))}},
q=l.BufferedBlockAlgorithm=t.extend({reset:function(){this._data=new r.init;this._nDataBytes=0},_append:function(a){"string"==typeof a&&(a=x.parse(a));this._data.concat(a);this._nDataBytes+=a.sigBytes},_process:function(a){var c=this._data,e=c.words,j=c.sigBytes,k=this.blockSize,b=j/(4*k),b=a?u.ceil(b):u.max((b|0)-this._minBufferSize,0);a=b*k;j=u.min(4*a,j);if(a){for(var q=0;q<a;q+=k)this._doProcessBlock(e,q);q=e.splice(0,a);c.sigBytes-=j}return new r.init(q,j)},clone:function(){var a=t.clone.call(this);
a._data=this._data.clone();return a},_minBufferSize:0});l.Hasher=q.extend({cfg:t.extend(),init:function(a){this.cfg=this.cfg.extend(a);this.reset()},reset:function(){q.reset.call(this);this._doReset()},update:function(a){this._append(a);this._process();return this},finalize:function(a){a&&this._append(a);return this._doFinalize()},blockSize:16,_createHelper:function(a){return function(b,e){return(new a.init(e)).finalize(b)}},_createHmacHelper:function(a){return function(b,e){return(new n.HMAC.init(a,
e)).finalize(b)}}});var n=d.algo={};return d}(Math);
(function(){var u=CryptoJS,p=u.lib.WordArray;u.enc.Base64={stringify:function(d){var l=d.words,p=d.sigBytes,t=this._map;d.clamp();d=[];for(var r=0;r<p;r+=3)for(var w=(l[r>>>2]>>>24-8*(r%4)&255)<<16|(l[r+1>>>2]>>>24-8*((r+1)%4)&255)<<8|l[r+2>>>2]>>>24-8*((r+2)%4)&255,v=0;4>v&&r+0.75*v<p;v++)d.push(t.charAt(w>>>6*(3-v)&63));if(l=t.charAt(64))for(;d.length%4;)d.push(l);return d.join("")},parse:function(d){var l=d.length,s=this._map,t=s.charAt(64);t&&(t=d.indexOf(t),-1!=t&&(l=t));for(var t=[],r=0,w=0;w<
l;w++)if(w%4){var v=s.indexOf(d.charAt(w-1))<<2*(w%4),b=s.indexOf(d.charAt(w))>>>6-2*(w%4);t[r>>>2]|=(v|b)<<24-8*(r%4);r++}return p.create(t,r)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}})();
(function(u){function p(b,n,a,c,e,j,k){b=b+(n&a|~n&c)+e+k;return(b<<j|b>>>32-j)+n}function d(b,n,a,c,e,j,k){b=b+(n&c|a&~c)+e+k;return(b<<j|b>>>32-j)+n}function l(b,n,a,c,e,j,k){b=b+(n^a^c)+e+k;return(b<<j|b>>>32-j)+n}function s(b,n,a,c,e,j,k){b=b+(a^(n|~c))+e+k;return(b<<j|b>>>32-j)+n}for(var t=CryptoJS,r=t.lib,w=r.WordArray,v=r.Hasher,r=t.algo,b=[],x=0;64>x;x++)b[x]=4294967296*u.abs(u.sin(x+1))|0;r=r.MD5=v.extend({_doReset:function(){this._hash=new w.init([1732584193,4023233417,2562383102,271733878])},
_doProcessBlock:function(q,n){for(var a=0;16>a;a++){var c=n+a,e=q[c];q[c]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360}var a=this._hash.words,c=q[n+0],e=q[n+1],j=q[n+2],k=q[n+3],z=q[n+4],r=q[n+5],t=q[n+6],w=q[n+7],v=q[n+8],A=q[n+9],B=q[n+10],C=q[n+11],u=q[n+12],D=q[n+13],E=q[n+14],x=q[n+15],f=a[0],m=a[1],g=a[2],h=a[3],f=p(f,m,g,h,c,7,b[0]),h=p(h,f,m,g,e,12,b[1]),g=p(g,h,f,m,j,17,b[2]),m=p(m,g,h,f,k,22,b[3]),f=p(f,m,g,h,z,7,b[4]),h=p(h,f,m,g,r,12,b[5]),g=p(g,h,f,m,t,17,b[6]),m=p(m,g,h,f,w,22,b[7]),
f=p(f,m,g,h,v,7,b[8]),h=p(h,f,m,g,A,12,b[9]),g=p(g,h,f,m,B,17,b[10]),m=p(m,g,h,f,C,22,b[11]),f=p(f,m,g,h,u,7,b[12]),h=p(h,f,m,g,D,12,b[13]),g=p(g,h,f,m,E,17,b[14]),m=p(m,g,h,f,x,22,b[15]),f=d(f,m,g,h,e,5,b[16]),h=d(h,f,m,g,t,9,b[17]),g=d(g,h,f,m,C,14,b[18]),m=d(m,g,h,f,c,20,b[19]),f=d(f,m,g,h,r,5,b[20]),h=d(h,f,m,g,B,9,b[21]),g=d(g,h,f,m,x,14,b[22]),m=d(m,g,h,f,z,20,b[23]),f=d(f,m,g,h,A,5,b[24]),h=d(h,f,m,g,E,9,b[25]),g=d(g,h,f,m,k,14,b[26]),m=d(m,g,h,f,v,20,b[27]),f=d(f,m,g,h,D,5,b[28]),h=d(h,f,
m,g,j,9,b[29]),g=d(g,h,f,m,w,14,b[30]),m=d(m,g,h,f,u,20,b[31]),f=l(f,m,g,h,r,4,b[32]),h=l(h,f,m,g,v,11,b[33]),g=l(g,h,f,m,C,16,b[34]),m=l(m,g,h,f,E,23,b[35]),f=l(f,m,g,h,e,4,b[36]),h=l(h,f,m,g,z,11,b[37]),g=l(g,h,f,m,w,16,b[38]),m=l(m,g,h,f,B,23,b[39]),f=l(f,m,g,h,D,4,b[40]),h=l(h,f,m,g,c,11,b[41]),g=l(g,h,f,m,k,16,b[42]),m=l(m,g,h,f,t,23,b[43]),f=l(f,m,g,h,A,4,b[44]),h=l(h,f,m,g,u,11,b[45]),g=l(g,h,f,m,x,16,b[46]),m=l(m,g,h,f,j,23,b[47]),f=s(f,m,g,h,c,6,b[48]),h=s(h,f,m,g,w,10,b[49]),g=s(g,h,f,m,
E,15,b[50]),m=s(m,g,h,f,r,21,b[51]),f=s(f,m,g,h,u,6,b[52]),h=s(h,f,m,g,k,10,b[53]),g=s(g,h,f,m,B,15,b[54]),m=s(m,g,h,f,e,21,b[55]),f=s(f,m,g,h,v,6,b[56]),h=s(h,f,m,g,x,10,b[57]),g=s(g,h,f,m,t,15,b[58]),m=s(m,g,h,f,D,21,b[59]),f=s(f,m,g,h,z,6,b[60]),h=s(h,f,m,g,C,10,b[61]),g=s(g,h,f,m,j,15,b[62]),m=s(m,g,h,f,A,21,b[63]);a[0]=a[0]+f|0;a[1]=a[1]+m|0;a[2]=a[2]+g|0;a[3]=a[3]+h|0},_doFinalize:function(){var b=this._data,n=b.words,a=8*this._nDataBytes,c=8*b.sigBytes;n[c>>>5]|=128<<24-c%32;var e=u.floor(a/
4294967296);n[(c+64>>>9<<4)+15]=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;n[(c+64>>>9<<4)+14]=(a<<8|a>>>24)&16711935|(a<<24|a>>>8)&4278255360;b.sigBytes=4*(n.length+1);this._process();b=this._hash;n=b.words;for(a=0;4>a;a++)c=n[a],n[a]=(c<<8|c>>>24)&16711935|(c<<24|c>>>8)&4278255360;return b},clone:function(){var b=v.clone.call(this);b._hash=this._hash.clone();return b}});t.MD5=v._createHelper(r);t.HmacMD5=v._createHmacHelper(r)})(Math);
(function(){var u=CryptoJS,p=u.lib,d=p.Base,l=p.WordArray,p=u.algo,s=p.EvpKDF=d.extend({cfg:d.extend({keySize:4,hasher:p.MD5,iterations:1}),init:function(d){this.cfg=this.cfg.extend(d)},compute:function(d,r){for(var p=this.cfg,s=p.hasher.create(),b=l.create(),u=b.words,q=p.keySize,p=p.iterations;u.length<q;){n&&s.update(n);var n=s.update(d).finalize(r);s.reset();for(var a=1;a<p;a++)n=s.finalize(n),s.reset();b.concat(n)}b.sigBytes=4*q;return b}});u.EvpKDF=function(d,l,p){return s.create(p).compute(d,
l)}})();
CryptoJS.lib.Cipher||function(u){var p=CryptoJS,d=p.lib,l=d.Base,s=d.WordArray,t=d.BufferedBlockAlgorithm,r=p.enc.Base64,w=p.algo.EvpKDF,v=d.Cipher=t.extend({cfg:l.extend(),createEncryptor:function(e,a){return this.create(this._ENC_XFORM_MODE,e,a)},createDecryptor:function(e,a){return this.create(this._DEC_XFORM_MODE,e,a)},init:function(e,a,b){this.cfg=this.cfg.extend(b);this._xformMode=e;this._key=a;this.reset()},reset:function(){t.reset.call(this);this._doReset()},process:function(e){this._append(e);return this._process()},
finalize:function(e){e&&this._append(e);return this._doFinalize()},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(e){return{encrypt:function(b,k,d){return("string"==typeof k?c:a).encrypt(e,b,k,d)},decrypt:function(b,k,d){return("string"==typeof k?c:a).decrypt(e,b,k,d)}}}});d.StreamCipher=v.extend({_doFinalize:function(){return this._process(!0)},blockSize:1});var b=p.mode={},x=function(e,a,b){var c=this._iv;c?this._iv=u:c=this._prevBlock;for(var d=0;d<b;d++)e[a+d]^=
c[d]},q=(d.BlockCipherMode=l.extend({createEncryptor:function(e,a){return this.Encryptor.create(e,a)},createDecryptor:function(e,a){return this.Decryptor.create(e,a)},init:function(e,a){this._cipher=e;this._iv=a}})).extend();q.Encryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize;x.call(this,e,a,c);b.encryptBlock(e,a);this._prevBlock=e.slice(a,a+c)}});q.Decryptor=q.extend({processBlock:function(e,a){var b=this._cipher,c=b.blockSize,d=e.slice(a,a+c);b.decryptBlock(e,a);x.call(this,
e,a,c);this._prevBlock=d}});b=b.CBC=q;q=(p.pad={}).Pkcs7={pad:function(a,b){for(var c=4*b,c=c-a.sigBytes%c,d=c<<24|c<<16|c<<8|c,l=[],n=0;n<c;n+=4)l.push(d);c=s.create(l,c);a.concat(c)},unpad:function(a){a.sigBytes-=a.words[a.sigBytes-1>>>2]&255}};d.BlockCipher=v.extend({cfg:v.cfg.extend({mode:b,padding:q}),reset:function(){v.reset.call(this);var a=this.cfg,b=a.iv,a=a.mode;if(this._xformMode==this._ENC_XFORM_MODE)var c=a.createEncryptor;else c=a.createDecryptor,this._minBufferSize=1;this._mode=c.call(a,
this,b&&b.words)},_doProcessBlock:function(a,b){this._mode.processBlock(a,b)},_doFinalize:function(){var a=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){a.pad(this._data,this.blockSize);var b=this._process(!0)}else b=this._process(!0),a.unpad(b);return b},blockSize:4});var n=d.CipherParams=l.extend({init:function(a){this.mixIn(a)},toString:function(a){return(a||this.formatter).stringify(this)}}),b=(p.format={}).OpenSSL={stringify:function(a){var b=a.ciphertext;a=a.salt;return(a?s.create([1398893684,
1701076831]).concat(a).concat(b):b).toString(r)},parse:function(a){a=r.parse(a);var b=a.words;if(1398893684==b[0]&&1701076831==b[1]){var c=s.create(b.slice(2,4));b.splice(0,4);a.sigBytes-=16}return n.create({ciphertext:a,salt:c})}},a=d.SerializableCipher=l.extend({cfg:l.extend({format:b}),encrypt:function(a,b,c,d){d=this.cfg.extend(d);var l=a.createEncryptor(c,d);b=l.finalize(b);l=l.cfg;return n.create({ciphertext:b,key:c,iv:l.iv,algorithm:a,mode:l.mode,padding:l.padding,blockSize:a.blockSize,formatter:d.format})},
decrypt:function(a,b,c,d){d=this.cfg.extend(d);b=this._parse(b,d.format);return a.createDecryptor(c,d).finalize(b.ciphertext)},_parse:function(a,b){return"string"==typeof a?b.parse(a,this):a}}),p=(p.kdf={}).OpenSSL={execute:function(a,b,c,d){d||(d=s.random(8));a=w.create({keySize:b+c}).compute(a,d);c=s.create(a.words.slice(b),4*c);a.sigBytes=4*b;return n.create({key:a,iv:c,salt:d})}},c=d.PasswordBasedCipher=a.extend({cfg:a.cfg.extend({kdf:p}),encrypt:function(b,c,d,l){l=this.cfg.extend(l);d=l.kdf.execute(d,
b.keySize,b.ivSize);l.iv=d.iv;b=a.encrypt.call(this,b,c,d.key,l);b.mixIn(d);return b},decrypt:function(b,c,d,l){l=this.cfg.extend(l);c=this._parse(c,l.format);d=l.kdf.execute(d,b.keySize,b.ivSize,c.salt);l.iv=d.iv;return a.decrypt.call(this,b,c,d.key,l)}})}();
(function(){for(var u=CryptoJS,p=u.lib.BlockCipher,d=u.algo,l=[],s=[],t=[],r=[],w=[],v=[],b=[],x=[],q=[],n=[],a=[],c=0;256>c;c++)a[c]=128>c?c<<1:c<<1^283;for(var e=0,j=0,c=0;256>c;c++){var k=j^j<<1^j<<2^j<<3^j<<4,k=k>>>8^k&255^99;l[e]=k;s[k]=e;var z=a[e],F=a[z],G=a[F],y=257*a[k]^16843008*k;t[e]=y<<24|y>>>8;r[e]=y<<16|y>>>16;w[e]=y<<8|y>>>24;v[e]=y;y=16843009*G^65537*F^257*z^16843008*e;b[k]=y<<24|y>>>8;x[k]=y<<16|y>>>16;q[k]=y<<8|y>>>24;n[k]=y;e?(e=z^a[a[a[G^z]]],j^=a[a[j]]):e=j=1}var H=[0,1,2,4,8,
16,32,64,128,27,54],d=d.AES=p.extend({_doReset:function(){for(var a=this._key,c=a.words,d=a.sigBytes/4,a=4*((this._nRounds=d+6)+1),e=this._keySchedule=[],j=0;j<a;j++)if(j<d)e[j]=c[j];else{var k=e[j-1];j%d?6<d&&4==j%d&&(k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255]):(k=k<<8|k>>>24,k=l[k>>>24]<<24|l[k>>>16&255]<<16|l[k>>>8&255]<<8|l[k&255],k^=H[j/d|0]<<24);e[j]=e[j-d]^k}c=this._invKeySchedule=[];for(d=0;d<a;d++)j=a-d,k=d%4?e[j]:e[j-4],c[d]=4>d||4>=j?k:b[l[k>>>24]]^x[l[k>>>16&255]]^q[l[k>>>
8&255]]^n[l[k&255]]},encryptBlock:function(a,b){this._doCryptBlock(a,b,this._keySchedule,t,r,w,v,l)},decryptBlock:function(a,c){var d=a[c+1];a[c+1]=a[c+3];a[c+3]=d;this._doCryptBlock(a,c,this._invKeySchedule,b,x,q,n,s);d=a[c+1];a[c+1]=a[c+3];a[c+3]=d},_doCryptBlock:function(a,b,c,d,e,j,l,f){for(var m=this._nRounds,g=a[b]^c[0],h=a[b+1]^c[1],k=a[b+2]^c[2],n=a[b+3]^c[3],p=4,r=1;r<m;r++)var q=d[g>>>24]^e[h>>>16&255]^j[k>>>8&255]^l[n&255]^c[p++],s=d[h>>>24]^e[k>>>16&255]^j[n>>>8&255]^l[g&255]^c[p++],t=
d[k>>>24]^e[n>>>16&255]^j[g>>>8&255]^l[h&255]^c[p++],n=d[n>>>24]^e[g>>>16&255]^j[h>>>8&255]^l[k&255]^c[p++],g=q,h=s,k=t;q=(f[g>>>24]<<24|f[h>>>16&255]<<16|f[k>>>8&255]<<8|f[n&255])^c[p++];s=(f[h>>>24]<<24|f[k>>>16&255]<<16|f[n>>>8&255]<<8|f[g&255])^c[p++];t=(f[k>>>24]<<24|f[n>>>16&255]<<16|f[g>>>8&255]<<8|f[h&255])^c[p++];n=(f[n>>>24]<<24|f[g>>>16&255]<<16|f[h>>>8&255]<<8|f[k&255])^c[p++];a[b]=q;a[b+1]=s;a[b+2]=t;a[b+3]=n},keySize:8});u.AES=p._createHelper(d)})();
</script><meta name="viewport" content="width=device-width, initial-scale=1.0">
<div style="
  position: absolute;
  font-size: 3vw;
  color: #eaeaea;
  left: 0px;
  top: 0px;
  width: 173%;
  text-align: left;
  opacity: 0.09;
  display:none;
">Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 Dev_Release | qEclipse_19/02/22 </div>

<div id="withoutlogin" class="body">
    <div id="updatechecking" style="
    position: absolute;
    bottom: 63px;
    display:none;
    left: 42px;
    font-size: 13px;
    color: #999;
    text-align: center;
"><div class="lds-dual-ring" style="
    height: 30px;
    width: 30px;
    position: relative;
    top: 7px;
    left: -3px;
"></div>Buscando atualização...</div>
<div id="menuexpand" onclick="menuclose()">
    <div class="menulist">
        <div class="menutxt" onclick=" initupdate();">🔰 Verificar atualizações</div>
        <div class="menutxt" onclick="termos()">📃 Termos de uso</div>
        <div class="menutxt" onclick="settings()">⚙️ Ajustes</div>
        <div class="menutxt hsharez" style="display:none;" onclick="hostshare()">🔌 HostShare</div>
        <div class="menutxt ipv6txt"  style="display:none;" onclick="setipv6()">🕋 IPV6 (Desligado)</div>
        <div class="menutxt" onclick="exitapp('')">❌ Encerrar aplicativo</div>
    </div>
    <div class="userprofile">
        <div class="userid">USER-ID: 0000xx</div>
    </div>
    <img src="pictures/menu.png" class="menuiconx" />
</div>





<div id="settingsapp" class="atlantusoverlay" >
    <div class="bodyboost" style="
    height: 358px;
">
  
    <div class="titleboost" style="       color: #ffc83d;
    margin-top: -121px;
    font-size: 90px;
    color: azure;
"><br>
    <div class="textboost" style="
    margin-top: -55px;
    margin-bottom: 38px;
    font-size: 18px;
    ">Área destinada a ajustes de vpn.</div></div>
    <div style="    height: 214px;
    overflow: scroll;
    position: relative;
    padding-top: 19px;">
    <div class="selectedserver udplist"  style="
        width: 29%;
    z-index: 25;
    height: 134px;
    position: absolute;
    border-radius: 6px;
    background: rgb(17, 15, 29);
    left: 58%;
    top: 0px;
">
</div>
    <div class="menutxt newbtx" style="margin-bottom: -5px; margin-left: -8px; margin-top: -20px;" onclick="udpchange()">📌 Porta UDP <div id="udpbubble" class="atlcircle descudp" style="     padding: 0px;
        padding: 0px;
    top: 9px;
    color: #999;
    background: red;
    font-size: 15px;
    left: 74%;">%</div></div>
    <div class="menutxt newbtx" style="margin-bottom: -5px; margin-left: -8px;" onclick="setipv6()">📌 IPV6 <div id="ipv6bubble" class="atlcircle"></div></div>
     <div class="menutxt newbtx" style="margin-bottom:0px;    margin-left: -8px;" onclick="setdialogpass()">📌 Evitar erro de login <div id="wrongauthbubble" class="atlcircle"></div></div>
    <div class="menutxt newbtx" style="margin-bottom:0px;    margin-left: -8px;" onclick="setkeepvpn()">📌 KeepVPN <div id="keepvpnbubble" class="atlcircle"></div></div>
    <div class="menutxt newbtx" style="margin-bottom:0px;    margin-left: -8px;" onclick="hostshare()">📌 Hostshare </div>
    <div class="menutxt newbtx" style="margin-bottom:0px;    margin-left: -8px;" onclick="setdatacompression()">📌 Compressão de dados <div id="compressbubble" class="atlcircle"></div></div>
    </div>
    <br>
    <div onclick="exitsettings()" class="activebt" style="margin-left: 5px;background: #ab2323;width: 80%;border-radius: 4px;box-shadow: 5px 4px 5px black;">Fechar</div>
    </div></div>



    <div id="exitapp" class="atlantusoverlay">
        <div class="bodyboost" style="
        height: 260px;
    "><span class="wave" style="
    height: 106px;
    position: relative;
    top: -70px;
    font-size: 70px;
    margin-left: -16px;
">👋</span>
      
        <div class="titleboost" style="
        color: #ffc83d;
    ">Deseja realmente sair?<br>
        <div class="textboost">Sua conexão será encerrada, se você confirmar este dialogo.</div></div>
        <br>
        <div onclick="exitappfinish()" class="activebt hshareon">Sim</div>
        <div onclick="exitappclose()" class="activebt" style="
    margin-left: 5px;
    background: #b2355b;
">Não</div><div onclick="exitapphide()" class="activebt" style="
    margin-left: 5px;
    background: #673ab7;
    margin-top: 5px;
">Minimizar</div>
        </div></div>




    <div id="hostshare" class="atlantusoverlay" style="">
        <div class="bodyboost" style="
        height: 246px;
    ">
            <img src="pictures/hostshare.gif" style="
            height: 106px;
            position: relative;
            top: -55px;
            filter: invert(1);
        ">
        <div class="titleboost" style="
        color: #2196f3;
    ">HostShare<br>
        <div class="textboost">Esta função serve para rotear para outros dispositivos o hostshare, caso queira configurar, clique em gerenciar.</div></div>
        <br>
        <div onclick="hostshareset()" class="activebt hshareon">Gerenciar</div>
        <div onclick="hostshareclose()" class="activebt" style="
    margin-left: 5px;
    background: #b2355b;
">Cancelar</div>
        </div></div>



    <div id="wronguser" class="atlantusoverlay">
        <div class="bodyboost" style="
        height: 246px;
    ">
            <img src="pictures/wrong.svg" style="
            height: 106px;
            position: relative;
            top: -55px;
        ">
        <div class="titleboost" style="
        color: #ff2222;
    ">Autenticação Falhou<br>
        <div class="textboost">Seus dados de usuário estão incorretos, por favor verifique novamente o seu acesso.</div></div>
        <br><div onclick="authfinishu()" class="activebt">Corrigir</div>
        </div></div>


        <div id="deviceid" class="atlantusoverlay" style="display:none;">
            <div class="bodyboost" style="height: 247px;border-radius: 30px;border: 0px;background: linear-gradient(273deg, #f48931, #a32020);">
                <img src="pictures/limiter.png" style="
                height: 130px;
                position: relative;
                top: -59px;
                margin-top: -26px;
            ">
            <div class="titleboost" style="
            color: #f0f0f0;
            filter: none;
            ">Limite Ultrapassado<br>
            <div class="textboost" style="font-size: 14px; color: #e6e6e6; height: 168px; overflow: scroll;">
              <center>Este acesso já ultrapassou o limite de dispositivos registrados.<br>
             Entre em contato com o fornecedor para mais informações.<br>
            </center></div></div>
            <br><div onclick="deviceclose()" style="
            width: 200px;
            background: #07060c;
            top: -74px;
            " class="activebt">Confirmar</div>
          </div></div>

        <div id="permissao" class="atlantusoverlay" style="display: none;">
            <div class="bodyboost">
                <img src="pictures/terms.svg" style="
                height: 106px;
                position: relative;
                top: -55px;
            ">
            <div class="titleboost" style="
            color: #ffd800; filter: none;">Permissão Necessária<br>
            <div class="textboost" style="font-size: 14px; color: #e6e6e6; height: 168px; overflow: scroll;">
              <center>Você precisa permitir a sobreposição, isso serve para que a VPN sempre se<br>
                 mantenha ativa e também com o processo acima de outros aplicativos
                   para que o sistema não encerre a menos que você mesmo faça.<br>
                   Você só precisa fazer isso uma única vez.</center></div></div>
            <br><div onclick="permitirsob()" style="
            width: 200px;
            background: #fe9500;" class="activebt">Permitir</div>
          </div></div>

          
          <div id="logsviewnew" class="atlantusoverlay" style="display: none;">
            <div class="bodyboost" style="
        height: 69%;
        top: 50%;
    ">
                <img src="pictures/document.png" style="
                height: 106px;
                position: relative;
                top: -55px;
            ">
            <div class="titleboost" style=" color: #e64c3c;">
            <div id="logslist" class="textboost" style="font-size: 12px;color: #e6e6e6;height: 168px;overflow: scroll;border-bottom: 2px solid;height: 79%;margin-top: 22px;">
              <center>-- Bem vindo aos registros --</center></div></div>
            <br><div onclick="logsviewnewclose()" class="activebt" style="
        width: 300px;
        top: -19px;
    ">Fechar</div>
          </div></div>


    <div id="termos" class="atlantusoverlay">
        <div class="bodyboost">
            <img src="pictures/terms.svg" style="
            height: 106px;
            position: relative;
            top: -55px;
        ">
        <div class="titleboost"  style=" color: #e64c3c;">Termos de Uso<br>
        <div class="textboost" style="font-size: 14px; color: #e6e6e6; height: 168px; overflow: scroll;">
          <center>Certifique-se de não usar este aplicativo para atividades ilegais, sua conta será suspensa se detectada.<br>
            Algum conteúdo pode estar banido em seu país, então não acesse,<br>
             apenas faça atividades básicas como filmes, jogos e música e pesquisas em geral,<br>
              pornografia infantil e golpes são inaceitáveis ​​e você será severamente punido se usar<br>
               este aplicativo para cometer esses absurdos .</center></div></div>
        <br><div onclick="termos()" class="activebt">Concordo</div>
      </div></div>



      <div id="validadeapp" class="atlantusoverlay" style="display: none;">
        <div class="bodyboost" style="
        height: 148px;
        background: white;
        border: 0px;
    "><div id="textvalidade" style="
        position: absolute;
        color: #333;
        width: 100%;
        top: 45px;
        left: 0px;
    "><div class="lds-dual-ringzpzp"></div></div>
        
        <img src="pictures/pet.png" style="
        position: absolute;
        right: -12px;
        top: -87px;
        height: 114px;
    ">
      
        <div class="titleboost" style="
        color: #ffc83d;
        margin-top: -121px;
        font-size: 90px;
    "><br>
        <div class="textboost" style="
        margin-top: -55px;
        margin-bottom: 38px;
        font-size: 18px;
        color: #222;
        ">Checando Validade</div></div>
        
        <br>
        <div onclick="closevalidity()" class="activebt" style="margin-left: 5px;background: #313048;width: 80%;border-radius: 4px;box-shadow: 5px 4px 5px black;margin-top: 17px;">Fechar</div>
        </div></div>

      






    <div id="devtest" style="display:none;" class="atlantusoverlay">
        <div class="bodyboost">
            <img src="pictures/terms.svg" style="
            height: 106px;
            position: relative;
            top: -55px;
        ">
        <div class="titleboost"  style=" color: #e64c3c;">Aplicativo de TESTE<br>
        <div class="textboost" style="font-size: 14px; color: #e6e6e6; height: 168px; overflow: scroll;">
          <center>Esse aplicativo é apenas um teste produzido por RGN & ATLANTUS.<br>
            Não divulgue esta versão, não altere nem faça nada.<br>
            Teste conexões e afins.<br>
              Agradecemos sua contribuição.</center></div></div>
        <br><div onclick='dev()' class="activebt">Concordo</div>
      </div></div>

    
    <div id="storagemode">
        <div class="bodyboost" style="
        height: 241px;">
            <img src="pictures/lock.svg" style="
            height: 106px;
            position: relative;
            top: -55px;
        ">
        <div class="titleboost"  style="
        color: #b79608;">Acesso Restrito<br>
        <div class="textboost">Este acesso atingiu o limite em dipositivos que pode conectar, caso esta mensagem seja um engano, contate o fornecedor de serviço para mais informações.</div></div>
        <br><div onclick="storagemode()" class="activebt">Certo</div>
      </div></div>
    
      <div id="connectedpl" >
        <div class="bodyboost" style="
        height: 271px;">
            <img src="pictures/check.svg" style="
            height: 106px;
            position: relative;
            top: -55px;
        ">
        <div class="titleboost" style="
        color: #6d86ff;
    ">Conectado com sucesso<br>
        <div class="textboost">Conexão bem sucedida, fique atento <b style="
        color: cadetblue;
    ">{{ username }}</b> faltam 56 dias para seu acesso expirar, recomendamos renovar de forma antecipada para que ele não seja excluido após acabar os dias.</div></div>
        <br><div onclick="$('#connectedpl').fadeOut(0);" class="activebt" style="    color: white;
        background: #12226e;">Entendi</div>
        </div></div>


    <div id="boostmode">
    <div class="bodyboost">
        <img src="pictures/boost.svg" style="
        height: 106px;
        position: relative;
        top: -55px;
    ">
    <div class="titleboost">Modo Boost<br>
    <div class="textboost">O modo Boost pode otimizar a velocidade e detectar os aplicativos usados &ZeroWidthSpace;&ZeroWidthSpace;para melhorar a experiência de conexão, você pode habilitar este modo. No entanto, você precisa conceder as permissões necessárias para realizar esta atividade.</div></div>
    <br><div onclick="acboostmode()" class="activebt">Ativar</div>
    <div onclick="boostmode()" style="margin-top: 5px; background: #9e330a;" class="activebt">Cancelar</div></div></div>

    
<div id="authtype" style="
position: absolute;
height: 100%;
width: 100%;
display:none;
background: #000000c2;
z-index: 5;
"><div style="
position: absolute;
left: 50%;
top: 35%;
-webkit-transform: translate(-50%, -50%);
transform: translate(-50%, -50%);
background: #1e2532;
height: 250px;
width: 330px;
border-radius: 10px;
text-align: center;
"><img src="pictures/149071.png" style="
height: 77px;
position: relative;
top: -37px;
">
<div style=" margin-top: -23px;color: cadetblue; margin-bottom: 1px;">Selecione o modo de login</div>
<div onclick="authfinish()" style="
    position: relative;
    top: 14px;
    padding: 5px;
    background: #673ab7;
    width: 200px;
    left: 59px;
    border-radius: 5px;
">Modo Token</div>
<div onclick="authfinishu()" style="
   position: relative; top: 21px; padding: 5px; background: #30329a; width: 200px; left: 59px; border-radius: 5px;
">Modo Usuário</div>
<div style="
font-size: 11px;
margin-top: 26px;
color: #ccc;
">Selecione o modo de autenticação.</div></div></div>




<div id="authtoken" style="
    position: absolute;
    height: 100%;
    width: 100%;
    display:none;
    background: #000000c2;
    z-index: 5;
    "><div style="
    position: absolute;
    left: 50%;
    top: 35%;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    background: #1e2532;
    height: 250px;
    width: 330px;
    border-radius: 10px;
    text-align: center;
"><img src="pictures/user.png" style="
    filter: invert(1);
    height: 77px;
    position: relative;
    top: -37px;
">
<div style="
    margin-top: -11px;
">Acesso token</div><input type="text" id="token" placeholder="token" style="
    padding: 10px;
    border-radius: 5px;
    background: #191e25;
    border: 0px;
    font-size: 18px;
    color: #999;
    margin-top: 11px;
">
<div onclick="authfinish()" style="
    position: relative;
    top: 14px;
    padding: 5px;
    background: #3f51b5;
    width: 100px;
    left: 106px;
    border-radius: 5px;
">Entrar</div>
<div style="
    font-size: 11px;
    margin-top: 26px;
    color: #ccc;
">O acesso token pode ser obtido com o fornecedor.</div></div></div>



    <div id="logsbar" style="display:none;" onclick="viewlogs()"><div id="openlog" style="
    text-align: center;
    font-size: 14px;
    margin-top: 8px;
">🔼 Expandir Logs 🔼</div> <div id="logsview"></div></div>

<div onclick="logsviewnewopen()" style="position: absolute;-webkit-transform: translate(-50%, -50%);transform: translate(-50%, -50%);
bottom: 6%;left: 50%;font-size: 18px;width: 330px;text-align: center;color: #000000;z-index: 6;
border-bottom: 1px dashed;width: 142px;padding-left: 17px;">
<img src="pictures/share.png" style="
    height: 20px;
    position: absolute;
    margin-left: -26px;
    margin-top: 7px;
    ">@ALL_SOURCESBR_OFC</div>
    <div id="dontconnect" class="presshere">VIROU MOD - @VEM_BRABO</div>
    <div id="connecting" class="presshere"><div class="lds-dual-ring"></div>Conectando</div>
    <div id="connected" class="presshere">Conexão Estabelecida</div>
</div><div id="withoutlogin" class="header">
    <div class="moonbottom"></div>

<div class="focuinauth"></div>
<div id="nrlixserver" style="
"><center>
    <div id="serverlist" onclick="serverchange()">
    
    </div>
  
    
    <div class="focuinserver"></div>




<div id="authshow">
    <div id="contentblock" style="
    position: fixed;
    top: -49px;
    width: 97%;
    z-index: 21;
    display: none;
    height: 106%;
"></div>
<div  class="authshow">
    <div class="selectedserver selectedserverz" onclick="serverchange()">
    <img id="fserver" src="pictures/flags/none.png" class="flagserver">
    <div id="nserver" class="nameserver">Defina um provedor</div>
    <div id="dserver" class="descserver">O modo de proteção</div>
    <img src="pictures/arrow.png" class="arrowserver">
    </div>
<div style="
    background: #04030491;
    width: 91%;
    height: 29px;
    border-radius: 4px;
    z-index: 5;
    padding: 9px;
    border: 1px solid #0d0d26;
    position: relative;
    display: inline-block;
    margin-top: -43px;
    box-shadow: 4px 5px 8px 0px #000000;
"><img src="pictures/user.png" style="
    position: absolute;
    left: 10px;
    height: 24px;
    top: 11px;
    filter: invert(1);
    opacity: 0.8;
"><input placeholder="Login" class="nrlixusernew" style="
    position: absolute;
    width: 82%;
    left: 50px;
    padding: 8px;
    background: transparent;
    border: 0px;
    font-size: 19px;
    color: #797979;
    top: 5px;
"></div><div style="
    background: #04030491;
    width: 91%;
    height: 29px;
    border-radius: 4px;
    z-index: 5;
    padding: 9px;
    border: 1px solid #0d0d26;
    position: relative;
    display: inline-block;
    margin-top: 8px;
    box-shadow: 4px 5px 8px 0px #000000;
"><img src="pictures/pass.png" style="
    position: absolute;
    left: 10px;
    height: 24px;
    top: 11px;
    filter: invert(1);
    opacity: 0.8;
"><input placeholder="Senha" class="nrlixpass" style="
    position: absolute;
    width: 82%;
    left: 50px;
    padding: 8px;
    background: transparent;
    border: 0px;
    font-size: 19px;
    color: #797979;
    top: 5px;
"></div>
</div>
<div onclick="startatlantus()" class="connectbt atlantusblock">
    <div class="starttext">Conectar</div></div>
</div>

</center></div>
<div class="registerbubble" onclick="menuaction()" style="
    left: 9px;
"><img src="pictures/menububble.png" style="
    position: relative;
    left: -31px;
    top: 1px;
    height: 22px;
    padding: 5px;
    filter: invert(1);
    " class="menuicon"><div style="
    position: absolute;
    top: 6px;
    left: 39px;
">Menu</div></div>

<div id="appname"></div>
<img class="logoapp" src="pictures/vembrabo.png" style="
height: 140px;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    left: 50%;
    top: 92px;
    position: fixed;
">
<div class="logoappx" style="
    display:none;
     height: 107px;
    background-size: 100% 100%;
    width: 107px;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
    left: 50%;
    top: 109px;
    position: fixed;
"></div>
<div style="display:none;" class="statusserver">Status:
<div class="substatusz">Desconectado</div>
</div>
    
</div>
